{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Tidal Automation Agents Administration Guide Add Intro Introduction Managing Windows agent installations Managing Java-based agent installations Securing agent and TA Master connections Managing agents in Tidal Automation Managing agent lists Troubleshooting agent issues","title":"Tidal Automation Agents Administration Guide"},{"location":"#tidal-automation-agents-administration-guide","text":"Add Intro Introduction Managing Windows agent installations Managing Java-based agent installations Securing agent and TA Master connections Managing agents in Tidal Automation Managing agent lists Troubleshooting agent issues","title":"Tidal Automation Agents Administration Guide"},{"location":"about-agents/","text":"About Tidal agents Companies often need to provide centralized scheduling and administration of workloads that span different computing plaforms, multiple machines, and multiple locations. Tidal Automation uses agents to run jobs on the platforms where they need to run. A Tidal Automation\u2122 network contains a primary instance called the TA Master and additional instances of Tidal Automation called agents. A TA Master can schedule jobs on these agents for execution, while the TA Master to focus on managing workload schedules. Agents also monitor the local environment and feeds the information back to the TA Master to better determine when customer applications are ready to be run. Tidal Automation supports agents for the following environments: Windows Java-based Unix/Linux OpenVMS z/Os The platform support for agents is documented in Tidal Automation Compatibility Matrix . Agent-specific documentation is provided for these agents: OpenVMS Agent Guide z/OS Agent and Gateway Adapter Guide In the basic TA network, the Master uses a centralized database containing all calendar and job scheduling information. One or more agent machines execute the production schedule. One or more client machines provides the TA user interface or console. The only prerequisite for the Master/agent relationship is that the machine acting as the Master must be on the same TCP/IP network as the machines serving as agents. Agents: Run on behalf of the TA Master Monitor file events and dependencies Communicate data back to the TA Master Note Tidal recommends that no more than five agents be run on the minimum hardware platform. However, the number of agents that can be run on a given server depends upon the CPU and memory resources available on the machine. Add a single agent at a time and gauge the effect of each added agent on system performance before adding more. You have to experiment with the configuration to achieve optimal results.","title":"About Tidal agents"},{"location":"about-agents/#about-tidal-agents","text":"Companies often need to provide centralized scheduling and administration of workloads that span different computing plaforms, multiple machines, and multiple locations. Tidal Automation uses agents to run jobs on the platforms where they need to run. A Tidal Automation\u2122 network contains a primary instance called the TA Master and additional instances of Tidal Automation called agents. A TA Master can schedule jobs on these agents for execution, while the TA Master to focus on managing workload schedules. Agents also monitor the local environment and feeds the information back to the TA Master to better determine when customer applications are ready to be run. Tidal Automation supports agents for the following environments: Windows Java-based Unix/Linux OpenVMS z/Os The platform support for agents is documented in Tidal Automation Compatibility Matrix . Agent-specific documentation is provided for these agents: OpenVMS Agent Guide z/OS Agent and Gateway Adapter Guide In the basic TA network, the Master uses a centralized database containing all calendar and job scheduling information. One or more agent machines execute the production schedule. One or more client machines provides the TA user interface or console. The only prerequisite for the Master/agent relationship is that the machine acting as the Master must be on the same TCP/IP network as the machines serving as agents. Agents: Run on behalf of the TA Master Monitor file events and dependencies Communicate data back to the TA Master Note Tidal recommends that no more than five agents be run on the minimum hardware platform. However, the number of agents that can be run on a given server depends upon the CPU and memory resources available on the machine. Add a single agent at a time and gauge the effect of each added agent on system performance before adding more. You have to experiment with the configuration to achieve optimal results.","title":"About Tidal agents"},{"location":"agent-lists-about/","text":"About agent lists An agent list is any set of licensed nodes in your network. You can assign jobs to run using agent lists similar to the way you assign them to individual agents. With agent lists, however, you have access to useful functions not available with individual agents. You can specify alternate agent(s) to run your jobs if the primary agent is unavailable, you can balance the workload of many jobs among the agents in the list, or you can broadcast jobs to run on all the machines in the agent list at the same time. The TA Master does not pick an agent from the agent list assigned to a job until that job is ready to run. Because the agent is not assigned to a job until the last minute, if a user looks at a Job Details dialog box before the job runs (e.g., the job is in a Waiting on Dependencies state), the Agent field on the Override tab is empty. The master does not select an agent from the agent list displayed in the Agent List field until the job\u2019s dependencies are met and the job is ready to run. Once the job is submitted to run and the agent is selected, the name of the agent displays in the Agent field. If the job reruns, the TA Master might assign a different agent from the agent list according to the demands of the production schedule. If you make a change to the Agent field, then the Agent List field is cleared as you, not the agent list, are selecting the agent. TA supports Windows, Unix, z/OS (formerly MVS or OS/390) and O/VMS agent platforms, but you cannot combine agents of different platform types in one agent list. Types of agent lists Tidal Automation supports the following types of agent lists: Ordered Agent List : You can use an ordered agent list to provide alternative agent(s) in case the primary agent is not available when a job is ready to run. When a network or machine failure occurs on the primary agent, the job is automatically routed to the next available alternate agent in the list. Agents are tried in the order that they appear in the list until an operational agent is found. The primary agent is always the first in the list. Alternative agents follow the primary agent. Broadcast : Simultaneously runs a job on every agent in the list. For example, you might use a broadcast list to backup each machine\u2019s files. Workload Balancing : You can use workload balancing to distribute jobs evenly among all the agents in the list. The following agent lists support workload balancing: Balanced Load : Launches jobs on the agent which currently has the lightest load. Use this type of list with TA agents on platforms that provide load information. Balanced Available : Launches jobs on the agent which currently has the lightest load and job limit available to run the job. Use this type of list with TA agents on platforms that provide load information. Rotation : Launches jobs by selecting agents successively. When the end of the agent list is reached, TA starts at the beginning of the list again. Random : Launches jobs by selecting agents randomly. Use this type of list to approximate workload balancing with remote shell agents. Agent list hierarchies You can manage agent lists by placing them into hierarchies of parent agent lists and child agent lists. A job using a parent agent list uses all agents belonging to the child agent lists. Agent list hierarchies provide a convenient way to organize a large set of agents into smaller more manageable sets. When a job is slated to run on an agent list, each child agent list in the parent agent list is treated as if it were a single agent list. For example, in a lightest load agent containing four child agent lists, the child agent list with the lightest load is chosen. The job then chooses among the agents with the lightest load inside the child agent list. An agent list hierarchy can only consist of agent lists of the same type. For example, you can have balanced load lists under balanced load lists, but not ordered lists under balanced load lists.","title":"About agent lists"},{"location":"agent-lists-about/#about-agent-lists","text":"An agent list is any set of licensed nodes in your network. You can assign jobs to run using agent lists similar to the way you assign them to individual agents. With agent lists, however, you have access to useful functions not available with individual agents. You can specify alternate agent(s) to run your jobs if the primary agent is unavailable, you can balance the workload of many jobs among the agents in the list, or you can broadcast jobs to run on all the machines in the agent list at the same time. The TA Master does not pick an agent from the agent list assigned to a job until that job is ready to run. Because the agent is not assigned to a job until the last minute, if a user looks at a Job Details dialog box before the job runs (e.g., the job is in a Waiting on Dependencies state), the Agent field on the Override tab is empty. The master does not select an agent from the agent list displayed in the Agent List field until the job\u2019s dependencies are met and the job is ready to run. Once the job is submitted to run and the agent is selected, the name of the agent displays in the Agent field. If the job reruns, the TA Master might assign a different agent from the agent list according to the demands of the production schedule. If you make a change to the Agent field, then the Agent List field is cleared as you, not the agent list, are selecting the agent. TA supports Windows, Unix, z/OS (formerly MVS or OS/390) and O/VMS agent platforms, but you cannot combine agents of different platform types in one agent list.","title":"About agent lists"},{"location":"agent-lists-about/#types-of-agent-lists","text":"Tidal Automation supports the following types of agent lists: Ordered Agent List : You can use an ordered agent list to provide alternative agent(s) in case the primary agent is not available when a job is ready to run. When a network or machine failure occurs on the primary agent, the job is automatically routed to the next available alternate agent in the list. Agents are tried in the order that they appear in the list until an operational agent is found. The primary agent is always the first in the list. Alternative agents follow the primary agent. Broadcast : Simultaneously runs a job on every agent in the list. For example, you might use a broadcast list to backup each machine\u2019s files. Workload Balancing : You can use workload balancing to distribute jobs evenly among all the agents in the list. The following agent lists support workload balancing: Balanced Load : Launches jobs on the agent which currently has the lightest load. Use this type of list with TA agents on platforms that provide load information. Balanced Available : Launches jobs on the agent which currently has the lightest load and job limit available to run the job. Use this type of list with TA agents on platforms that provide load information. Rotation : Launches jobs by selecting agents successively. When the end of the agent list is reached, TA starts at the beginning of the list again. Random : Launches jobs by selecting agents randomly. Use this type of list to approximate workload balancing with remote shell agents.","title":"Types of agent lists"},{"location":"agent-lists-about/#agent-list-hierarchies","text":"You can manage agent lists by placing them into hierarchies of parent agent lists and child agent lists. A job using a parent agent list uses all agents belonging to the child agent lists. Agent list hierarchies provide a convenient way to organize a large set of agents into smaller more manageable sets. When a job is slated to run on an agent list, each child agent list in the parent agent list is treated as if it were a single agent list. For example, in a lightest load agent containing four child agent lists, the child agent list with the lightest load is chosen. The job then chooses among the agents with the lightest load inside the child agent list. An agent list hierarchy can only consist of agent lists of the same type. For example, you can have balanced load lists under balanced load lists, but not ordered lists under balanced load lists.","title":"Agent list hierarchies"},{"location":"agent-lists-aws/","text":"Using agent lists with Amazon Web Service Auto Scaling Amazon Web Service (AWS) Auto Scaling monitors your applications and automatically adjusts the capacity to maintain steady, predictable performance at the lowest possible cost. Using AWS Auto Scaling, you can setup application scaling for multiple resources across multiple services in less time. When a new agent machine is launched in the Amazon Web Service (AWS) with Auto Scaling group enabled, the agent is created and added to agent lists in TA. Similarly, when the existing AWS agent machine is removed or terminated from the AWS Auto Scaling group, the agent gets deleted and removed from the agent lists. This process is done automatically using the following AWS components: Auto Scaling Group AWS Simple Notification Service AWS Lambda function The following block diagram explains the process involved in registering and unregistering agents with the agent list and TA Master. Creating an AWS Auto Scaling group Autoscaling helps to ensure that the correct number of instances are available to handle the load for the application. The collections of instances are created and called the Autoscaling groups. The maximum or minimum number of instances are specified in each group. Autoscaling ensures that the group never goes above or below the values set. For more information on creating the Autoscaling Group, see the following link: https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg.html Getting AWS Simple Notification Services messages A topic is a communication channel to send messages and subscribe to notifications. A topic name is used to create a permanent unique identifier called an Amazon Resource Name (ARN). To create a new topic: In the Amazon SNS console, select Create topic . The Create topic dialog box appears. In the Topic name field, enter the topic name. In the Display name field, enter the topic display name. This display name is required for topics with SMS subscriptions. Select Create topic . The new topic appears. To receive messages published to a topic, you have to subscribe an endpoint to that topic. An endpoint is a mobile app, web server, email address, or an Amazon SQS queue that can receive notification messages from Amazon SNS. Once you subscribe an endpoint to a topic and the subscription is confirmed, the endpoint will receive all messages published to that topic. You configure the subscription to send the topic messages to your email account. To create subscription: In the Amazon SNS console, select Create subscription . The Create Subscription dialog box appears. Enter the topic ARN. From the Protocol drop-down list, select AWS Lambda . From the Endpoint drop-down list, choose an email address you can use to receive the notification. Select Create subscription . Go to your email application and open the message from AWS Notifications, and select the link to confirm your subscription. Your web browser displays a confirmation response from Amazon SNS. For more information on creating the topic and subscribe topic, see the following links: https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html Creating a lambda function A Lambda function is created to handle the launching of an instance or termination of an instance. For more information on creating the Lambda function, see the following link: https://docs.aws.amazon.com/lambda/latest/dg/get-started-create-function.html Lambda handler When the instance is up/down, the Lambda Handler receives the AWS SNS messages during launch or termination of the instance. The Lambda handler reads the SNS notification message in the Lambda code, fetches the instance details, and calls the TA API call based on the instance notification type. If the notification type is New Instance , it checks whether the agent already exists. Then: If the prefix of the agent name matches with the existing agent name and the agent is disabled, the latest data is updated to that existing disabled agent while creating the new instance in AWS. If the IP of the agent matches with the existing agent and the agent is disabled, the latest data is updated to that existing disabled agent while creating the new instance in AWS. If the notification type is Terminate Instance , it checks whether the agent references with other objects like job. If there is a reference with other objects, the agent is disabled instead of deleting the agent while removing the instance from AWS account. Setting up an AWS environment Before using AWS Autoscaling, you must set up an AWS environment. To set up an AWS environment: Create a new Amazon Machine Image (AMI) with Unix/Window TA agent. For more information on creating AMI, see the following link: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html If you already have the AMI with the TA agent, move to the next step. Create a Lambda function to handle the launching or termination of instance and upload the AgentListAutomation.jar file. Select the following Lambda Handler in the Handler text box: \u201c com.tidal.automation.AgentListLambdaFunctionHandler \u201d Select a memory size of at least 512 MB. Choose the Timeout value based on Lambda running time (suggested value is 5 minutes). Choose the appropriate Lambda Role. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html?icmpid=docs_iam_console Create AWS SNS notifications and subscribe with the Lambda function created in Step 2. Create an Autoscaling Launch Configuration . For choosing the required configuration with the corresponding AMI, choose the IP Address Type as Assign a public IP address for every instance. https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html Create the Autoscaling group and map it with the created SNS. Note that the Virtual Private Cloud (VPC) ID must be the same as the CM VPC. Client Manager configuration properties The following table provides the list of Client Manager (CM) properties supported in the AgentListAutomation.jar file. Property Name Required? Description active Whether the agent list is active (default: Y) agentlistid Y ID of the TA agent list. Multiple IDs can be given with comma separated. cm_dsppluginname Plugin name (default: \"tes-6.5\"). cm_password Y Client Manager password. cm_servername Y IP address of the Client Manager. cm_serverport Server port number (default: 8080). cm_username Y Username of the Client Manager. description User-defined description (default: \"Agent created by AWS Lambda with AWS Autoscaling group\"). iptype Type of IP address (default: \"public\") public : Agent machine IP address is a public IP address private : Agent machine IP address is a public IP address (i.e. within the subnet IP range) maxjoblimit Maximum number of jobs that can be run in an agent list (default: 10). nameprefix Agent name prefix (default: \"AWS_AGENT\"). ostype Y Type of operating system used by TA. port Agent machine's port number (default: 5912). runtimeuserid TA runtime user ID (default: 0). AWS configuration properties The following table provides the list of AWS properties. Property Name Required? Description accesskey Y AWS access key. secretkey Y AWS secret key. Uselambdavariable Whether to use a Lambda variable (default: Y). Y : All properties are loaded from automation.props file and also any property can be overridden through the Lambda environment variable. Note that the CM password must be encrypted by Key Management Service (KMS) key, and other property should not be encrypted. For more information on KMS creation, see the following link: https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html N : All properties are loaded from automation.props file. The AWS Lambda environment variable option is not available for this condition. Tip For security reasons, use read-only user access key and secret key. To create the user access key in the AWS management console: In the Navigation panel of the Identity Access Management (IAM) console, choose Users . The list of users having read only access permission is displayed. If you want to add a new user, choose Add user . Select the desired user. Select the Security Credentials tab and select Create access key . The user access key is created. For more information on access key creation, see the following link: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html For security reasons, add KMS key decrypt inline policy for read only user. The following example provides the sample policy JSON file: { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"VisualEditor0\", \"Effect\": \"Allow\", \"Action\": \"kms:Decrypt\", \"Resource\": \"arn:aws:kms:<region>:<AWS AccountId>:key/<KMS key Id>\" } ] }","title":"Using AWS autoscaling with agent lists"},{"location":"agent-lists-aws/#using-agent-lists-with-amazon-web-service-auto-scaling","text":"Amazon Web Service (AWS) Auto Scaling monitors your applications and automatically adjusts the capacity to maintain steady, predictable performance at the lowest possible cost. Using AWS Auto Scaling, you can setup application scaling for multiple resources across multiple services in less time. When a new agent machine is launched in the Amazon Web Service (AWS) with Auto Scaling group enabled, the agent is created and added to agent lists in TA. Similarly, when the existing AWS agent machine is removed or terminated from the AWS Auto Scaling group, the agent gets deleted and removed from the agent lists. This process is done automatically using the following AWS components: Auto Scaling Group AWS Simple Notification Service AWS Lambda function The following block diagram explains the process involved in registering and unregistering agents with the agent list and TA Master.","title":"Using agent lists with Amazon Web Service Auto Scaling"},{"location":"agent-lists-aws/#creating-an-aws-auto-scaling-group","text":"Autoscaling helps to ensure that the correct number of instances are available to handle the load for the application. The collections of instances are created and called the Autoscaling groups. The maximum or minimum number of instances are specified in each group. Autoscaling ensures that the group never goes above or below the values set. For more information on creating the Autoscaling Group, see the following link: https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg.html","title":"Creating an AWS Auto Scaling group"},{"location":"agent-lists-aws/#getting-aws-simple-notification-services-messages","text":"A topic is a communication channel to send messages and subscribe to notifications. A topic name is used to create a permanent unique identifier called an Amazon Resource Name (ARN). To create a new topic: In the Amazon SNS console, select Create topic . The Create topic dialog box appears. In the Topic name field, enter the topic name. In the Display name field, enter the topic display name. This display name is required for topics with SMS subscriptions. Select Create topic . The new topic appears. To receive messages published to a topic, you have to subscribe an endpoint to that topic. An endpoint is a mobile app, web server, email address, or an Amazon SQS queue that can receive notification messages from Amazon SNS. Once you subscribe an endpoint to a topic and the subscription is confirmed, the endpoint will receive all messages published to that topic. You configure the subscription to send the topic messages to your email account. To create subscription: In the Amazon SNS console, select Create subscription . The Create Subscription dialog box appears. Enter the topic ARN. From the Protocol drop-down list, select AWS Lambda . From the Endpoint drop-down list, choose an email address you can use to receive the notification. Select Create subscription . Go to your email application and open the message from AWS Notifications, and select the link to confirm your subscription. Your web browser displays a confirmation response from Amazon SNS. For more information on creating the topic and subscribe topic, see the following links: https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html https://docs.aws.amazon.com/sns/latest/dg/SubscribeTopic.html","title":"Getting AWS Simple Notification Services messages"},{"location":"agent-lists-aws/#creating-a-lambda-function","text":"A Lambda function is created to handle the launching of an instance or termination of an instance. For more information on creating the Lambda function, see the following link: https://docs.aws.amazon.com/lambda/latest/dg/get-started-create-function.html","title":"Creating a lambda function"},{"location":"agent-lists-aws/#lambda-handler","text":"When the instance is up/down, the Lambda Handler receives the AWS SNS messages during launch or termination of the instance. The Lambda handler reads the SNS notification message in the Lambda code, fetches the instance details, and calls the TA API call based on the instance notification type. If the notification type is New Instance , it checks whether the agent already exists. Then: If the prefix of the agent name matches with the existing agent name and the agent is disabled, the latest data is updated to that existing disabled agent while creating the new instance in AWS. If the IP of the agent matches with the existing agent and the agent is disabled, the latest data is updated to that existing disabled agent while creating the new instance in AWS. If the notification type is Terminate Instance , it checks whether the agent references with other objects like job. If there is a reference with other objects, the agent is disabled instead of deleting the agent while removing the instance from AWS account.","title":"Lambda handler"},{"location":"agent-lists-aws/#setting-up-an-aws-environment","text":"Before using AWS Autoscaling, you must set up an AWS environment. To set up an AWS environment: Create a new Amazon Machine Image (AMI) with Unix/Window TA agent. For more information on creating AMI, see the following link: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html If you already have the AMI with the TA agent, move to the next step. Create a Lambda function to handle the launching or termination of instance and upload the AgentListAutomation.jar file. Select the following Lambda Handler in the Handler text box: \u201c com.tidal.automation.AgentListLambdaFunctionHandler \u201d Select a memory size of at least 512 MB. Choose the Timeout value based on Lambda running time (suggested value is 5 minutes). Choose the appropriate Lambda Role. https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles.html?icmpid=docs_iam_console Create AWS SNS notifications and subscribe with the Lambda function created in Step 2. Create an Autoscaling Launch Configuration . For choosing the required configuration with the corresponding AMI, choose the IP Address Type as Assign a public IP address for every instance. https://docs.aws.amazon.com/autoscaling/ec2/userguide/LaunchConfiguration.html Create the Autoscaling group and map it with the created SNS. Note that the Virtual Private Cloud (VPC) ID must be the same as the CM VPC.","title":"Setting up an AWS environment"},{"location":"agent-lists-aws/#client-manager-configuration-properties","text":"The following table provides the list of Client Manager (CM) properties supported in the AgentListAutomation.jar file. Property Name Required? Description active Whether the agent list is active (default: Y) agentlistid Y ID of the TA agent list. Multiple IDs can be given with comma separated. cm_dsppluginname Plugin name (default: \"tes-6.5\"). cm_password Y Client Manager password. cm_servername Y IP address of the Client Manager. cm_serverport Server port number (default: 8080). cm_username Y Username of the Client Manager. description User-defined description (default: \"Agent created by AWS Lambda with AWS Autoscaling group\"). iptype Type of IP address (default: \"public\") public : Agent machine IP address is a public IP address private : Agent machine IP address is a public IP address (i.e. within the subnet IP range) maxjoblimit Maximum number of jobs that can be run in an agent list (default: 10). nameprefix Agent name prefix (default: \"AWS_AGENT\"). ostype Y Type of operating system used by TA. port Agent machine's port number (default: 5912). runtimeuserid TA runtime user ID (default: 0).","title":"Client Manager configuration properties"},{"location":"agent-lists-aws/#aws-configuration-properties","text":"The following table provides the list of AWS properties. Property Name Required? Description accesskey Y AWS access key. secretkey Y AWS secret key. Uselambdavariable Whether to use a Lambda variable (default: Y). Y : All properties are loaded from automation.props file and also any property can be overridden through the Lambda environment variable. Note that the CM password must be encrypted by Key Management Service (KMS) key, and other property should not be encrypted. For more information on KMS creation, see the following link: https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html N : All properties are loaded from automation.props file. The AWS Lambda environment variable option is not available for this condition. Tip For security reasons, use read-only user access key and secret key. To create the user access key in the AWS management console: In the Navigation panel of the Identity Access Management (IAM) console, choose Users . The list of users having read only access permission is displayed. If you want to add a new user, choose Add user . Select the desired user. Select the Security Credentials tab and select Create access key . The user access key is created. For more information on access key creation, see the following link: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html For security reasons, add KMS key decrypt inline policy for read only user. The following example provides the sample policy JSON file: { \"Version\": \"2012-10-17\", \"Statement\": [ { \"Sid\": \"VisualEditor0\", \"Effect\": \"Allow\", \"Action\": \"kms:Decrypt\", \"Resource\": \"arn:aws:kms:<region>:<AWS AccountId>:key/<KMS key Id>\" } ] }","title":"AWS configuration properties"},{"location":"agent-lists-create/","text":"Creating and managing agent lists You can use the following procedures to create and manage agent lists: Adding an agent list You can add an agent list under a parent agent list of the same type, or under the root platform folder. When you add an agent list under a parent agent list, the parent agent list treats the agent list as if its agents were direct members of the list. To add an agent list: From the Navigator panel, select Definitions > Agent Lists to display the Agent Lists panel. Select a type of agent folder. Select Add Agent List from the context menu to display the Agent List Definition dialog box. Specify the properties for the agent list: List Name : Unique name for the agent list (60 character limit). Parent Lis t: Optional parent list to which you can add this list. List Type : Type of agent list based on how you want jobs assigned to agents in the list. Select OK to add the agent list. The agent list appears in the Agent Lists panel. Changing the order of the agents in the list To change the order of the agents in the list: From the Navigator panel, select Definitions > Agent Lists to display the Agent Lists panel. Select a type of agent folder. For the agent list you want to edit, select Edit Agent List from the context menu. In the Agents Selected field, select the agent whose position you want to change. Select the up-arrow (^) or down-arrow (v) button(s) to move the agent up or down in the list, or right-click and use the context menu selections to move the agent up or down in the list. Note When specifying an ordered list, the first agent in the list is considered the primary agent. All subsequent agents are alternate agents if the primary agent or other alternate agents are unavailable. Deleting an agent list You can delete an agent list from an Agent Lists panel. You cannot delete the platform folder that contains the agent lists. If you delete a parent agent list, you also delete its child agent lists. To delete an agent list: From the Navigator panel, select Definitions > Agent Lists to display the Agent Lists panel. Select a type of agent folder. Select the agent list to delete and select Delete on the TA toolbar, or right-click the agent list and select Delete Agent List from the context menu. Select Yes in the confirmation dialog to delete the agent list and all its child agent lists (if any) from the TA database. Editing an agent list You can edit an agent list to add or remove agents, to change its name, or to change its parent agent list. You cannot change its platform type or agent list type. Neither can you change its parent to a list of a different type. To edit an agent list: From the Navigator panel, select Definitions > Agent Lists to display the Agent Lists panel. Select a type of agent folder. Double-click the agent list you want to edit, or right-click the agent list and select Edit Agent List from the context menu. Edit the desired properties for the agent list. Click OK to update the agent list in the TA database or Cancel to discard your changes and close the dialog box. The update takes effect the next time the master is refreshed. Moving an agent list You can move agent lists to a different location in the agent list tree, with the following limitations: You cannot move agent lists from one platform to another You cannotumove agent lists to an agent list of a different list type (Ordered, Random, Balanced Load, Balanced Available, Broadcast, or Rotation) You cannot move a parent agent list into one of its own child agent lists. To move an agent list: From the Navigator panel, select Definitions > Agent Lists to display the Agent Lists panel. Select a type of agent folder. Double-click the agent list you want to edit, or right-click the agent list and select Edit Agent List from the context menu. In the Parent List field, select a new parent agent list from the drop-down menu. Selecting agents for an agent list You select the agents that belong to an agent list from the Agent List Definition dialog box. You can also order the selected list, which is necessary for ordered list types where you can specify the primary agent by placing it first in the list. To select an agent for an agent list: From the Navigator panel, select Definitions > Agent Lists to display the Agent Lists panel. Select a type of agent folder. Double-click the agent list you want to edit, or right-click the agent list and select Edit Agent List from the context menu. From the Agents Available field drop-down menu, select the agent(s) to include in the agent list. The agents shown in this field are all licensed agents on your system with the specified platform. Note that any agents with a red X are not available for use, although they are licensed agents. To add agents to the agent list, click: The left arrow button (<) to transfer the selected agent(s) to the Agents Selected field. The double left arrow button (<<) to transfer all agents to the Agents Selected field. To remove agents from the agent list, click: The right arrow button (>) to transfer the selected agent(s) from the Agents Selecte d field. The double right arrow button (>>) to transfer all agents from the Agents Selected field. Displaying agent lists Agent lists are displayed in a hierarchical format in the agent lists panes. Each platform that TA supports has its own agent lists panel. Each agent list displays its associated agents as child nodes and displays any child agent lists. To display available agent lists: From the Navigator panel, select Definitions> Agent Lists to display the Agent Lists panel. Select a type of agent folder. Displaying agent list properties To display an agent list\u2019s properties: From the Navigator panel, select Definitions> Agent Lists to display the Agent Lists panel. Select a type of agent folder. Double-click the agent list you want to view, or right-click the agent list and select Edit Agent List from the context menu.","title":"Creating agent lists"},{"location":"agent-lists-create/#creating-and-managing-agent-lists","text":"You can use the following procedures to create and manage agent lists:","title":"Creating and managing agent lists"},{"location":"agent-lists-create/#adding-an-agent-list","text":"You can add an agent list under a parent agent list of the same type, or under the root platform folder. When you add an agent list under a parent agent list, the parent agent list treats the agent list as if its agents were direct members of the list. To add an agent list: From the Navigator panel, select Definitions > Agent Lists to display the Agent Lists panel. Select a type of agent folder. Select Add Agent List from the context menu to display the Agent List Definition dialog box. Specify the properties for the agent list: List Name : Unique name for the agent list (60 character limit). Parent Lis t: Optional parent list to which you can add this list. List Type : Type of agent list based on how you want jobs assigned to agents in the list. Select OK to add the agent list. The agent list appears in the Agent Lists panel.","title":"Adding an agent list"},{"location":"agent-lists-create/#changing-the-order-of-the-agents-in-the-list","text":"To change the order of the agents in the list: From the Navigator panel, select Definitions > Agent Lists to display the Agent Lists panel. Select a type of agent folder. For the agent list you want to edit, select Edit Agent List from the context menu. In the Agents Selected field, select the agent whose position you want to change. Select the up-arrow (^) or down-arrow (v) button(s) to move the agent up or down in the list, or right-click and use the context menu selections to move the agent up or down in the list. Note When specifying an ordered list, the first agent in the list is considered the primary agent. All subsequent agents are alternate agents if the primary agent or other alternate agents are unavailable.","title":"Changing the order of the agents in the list"},{"location":"agent-lists-create/#deleting-an-agent-list","text":"You can delete an agent list from an Agent Lists panel. You cannot delete the platform folder that contains the agent lists. If you delete a parent agent list, you also delete its child agent lists. To delete an agent list: From the Navigator panel, select Definitions > Agent Lists to display the Agent Lists panel. Select a type of agent folder. Select the agent list to delete and select Delete on the TA toolbar, or right-click the agent list and select Delete Agent List from the context menu. Select Yes in the confirmation dialog to delete the agent list and all its child agent lists (if any) from the TA database.","title":"Deleting an agent list"},{"location":"agent-lists-create/#editing-an-agent-list","text":"You can edit an agent list to add or remove agents, to change its name, or to change its parent agent list. You cannot change its platform type or agent list type. Neither can you change its parent to a list of a different type. To edit an agent list: From the Navigator panel, select Definitions > Agent Lists to display the Agent Lists panel. Select a type of agent folder. Double-click the agent list you want to edit, or right-click the agent list and select Edit Agent List from the context menu. Edit the desired properties for the agent list. Click OK to update the agent list in the TA database or Cancel to discard your changes and close the dialog box. The update takes effect the next time the master is refreshed.","title":"Editing an agent list"},{"location":"agent-lists-create/#moving-an-agent-list","text":"You can move agent lists to a different location in the agent list tree, with the following limitations: You cannot move agent lists from one platform to another You cannotumove agent lists to an agent list of a different list type (Ordered, Random, Balanced Load, Balanced Available, Broadcast, or Rotation) You cannot move a parent agent list into one of its own child agent lists. To move an agent list: From the Navigator panel, select Definitions > Agent Lists to display the Agent Lists panel. Select a type of agent folder. Double-click the agent list you want to edit, or right-click the agent list and select Edit Agent List from the context menu. In the Parent List field, select a new parent agent list from the drop-down menu.","title":"Moving an agent list"},{"location":"agent-lists-create/#selecting-agents-for-an-agent-list","text":"You select the agents that belong to an agent list from the Agent List Definition dialog box. You can also order the selected list, which is necessary for ordered list types where you can specify the primary agent by placing it first in the list. To select an agent for an agent list: From the Navigator panel, select Definitions > Agent Lists to display the Agent Lists panel. Select a type of agent folder. Double-click the agent list you want to edit, or right-click the agent list and select Edit Agent List from the context menu. From the Agents Available field drop-down menu, select the agent(s) to include in the agent list. The agents shown in this field are all licensed agents on your system with the specified platform. Note that any agents with a red X are not available for use, although they are licensed agents. To add agents to the agent list, click: The left arrow button (<) to transfer the selected agent(s) to the Agents Selected field. The double left arrow button (<<) to transfer all agents to the Agents Selected field. To remove agents from the agent list, click: The right arrow button (>) to transfer the selected agent(s) from the Agents Selecte d field. The double right arrow button (>>) to transfer all agents from the Agents Selected field.","title":"Selecting agents for an agent list"},{"location":"agent-lists-create/#displaying-agent-lists","text":"Agent lists are displayed in a hierarchical format in the agent lists panes. Each platform that TA supports has its own agent lists panel. Each agent list displays its associated agents as child nodes and displays any child agent lists. To display available agent lists: From the Navigator panel, select Definitions> Agent Lists to display the Agent Lists panel. Select a type of agent folder.","title":"Displaying agent lists"},{"location":"agent-lists-create/#displaying-agent-list-properties","text":"To display an agent list\u2019s properties: From the Navigator panel, select Definitions> Agent Lists to display the Agent Lists panel. Select a type of agent folder. Double-click the agent list you want to view, or right-click the agent list and select Edit Agent List from the context menu.","title":"Displaying agent list properties"},{"location":"app-datamover/","text":"DataMover job support Note : DataMover jobs are only supported on Unix/Linux agents. Amazon S3 functionality The total volume of data and number of objects you can store are unlimited. Individual Amazon S3 objects can range in size from one byte (1 B) to five terabytes (5 TB). The largest object that can be uploaded in a single PUT is five gigabytes (5 GB). For objects larger than 100 megabytes (100 MB), customers should consider using the multipart upload capability. When using multipart upload, each part must be at least 5 MB in size, except the last part. So, in the list of files provided on the dialog box, each must be at least 5MB other than the last file in the list. HFS functionality Hortonworks Hadoop Download the Hortonworks Hadoop client libraries and copy into the Agent/lib directory. See Installing Hadoop client libraries , for information about obtaining and installing the libraries. Cloudera Hadoop Download the Cloudera Hadoop client libraries and copy into the Agent/lib directory. See Installing Hadoop client libraries , for information about obtaining and installing the libraries. MapR Hadoop To use DataMover for MapR Hadoop, the MapR client must be installed on the machine running the TA agent. The TA agent supports MapR client versions 1.2.9 and 2.0.0. It is the user's responsibility to ensure that the MapR client is installed properly and is communicating with the MapR cluster. For more information on how to set up the MapR client, see: http://www.mapr.com/doc/display/MapR/Setting+Up+the+Client No files need to be copied for MapR Hadoop. However, updates to the tagent.ini file are required. See HFS usage notes for details. HFS usage notes Agent ini file Kerberos Configuration If an agent is going to access any Hadoop file system that is secured by Kerberos, the new Kerberos Realm and Kerberos KDC Name must be specified in the agent's tagent.ini file. Like other tagent.ini parameters, these values can be specified at a global (all) agent level or on a per agent basis. Unless both of these parameters are defined, the agent will not attempt Kerberos authentication, even if the Hadoop Data Mover Job has checked the Use Kerberos Authentication check box. MapR Configuration When using MapR Hadoop on a 64-bit machine, add the following line to your tagent.ini file (assuming the MapR client is installed in the default location): jvmpara=-Djava.library.path=/opt/mapr/hadoop/hadoop-0.20.2/lib/native/Linux-amd64-64 When using MapR Hadoop on a 32-bit machine, add the following line to your tagent.ini file (assuming the MapR client is installed in the default location): jvmpara=-Djava.library.path=/opt/mapr/hadoop/hadoop-0.20.2/lib/native/Linux-i386-32 To use MapR Hadoop, you must also specify the location of the MapR Hadoop jar files. Use the MapRClasspath parameter to specify the full path to the required MapR Hadoop jar file directory. Add the following line to your tagent.ini file (assuming the MapR client is installed in the default location): maprclasspath=/opt/mapr/hadoop/hadoop-0.20.2/lib/* User configuration file With this release of the agent, there is a new user configuration file, TdlUser.cfg, that specifies parameters for the runtime user associated with a job. It is located in the agent's root directory, for example, /opt/TIDAL/Agent/<name-of-agent> . The user configuration file has the following layout: parameter=value parameter=value [user-1] parameter=value parameter=value . .[user-2] parameter=value parameter=value A parameter value is specified in a parameter/value line which has the form parameter=value. Default configuration parameters to be applied to all users are specified before the first user-specific parameter values, which is referred to as the \u201cdefault section\u201d. To specify parameter values and/or to override a default parameter value for a particular user, add a section for that user. A user section starts with a \"user section\" line that contains the user name enclosed in brackets (\u201c[\", \u201c]\u201d) followed by a number of parameter/value lines. All parameter/value lines following a user section line up until the next user section line (or end of the file) are applied to that specific user. Parameter values specified in a user section override parameter values that are specified in the default section. Lines that start with the \"#\" character are ignored. The new user configuration parameters are KerberosPrincipal and KeyTabFilePath . These parameters specify the Principal and KeyTab file for the agent to use when performing Kerberos authentication.","title":"DataMover job support"},{"location":"app-datamover/#datamover-job-support","text":"Note : DataMover jobs are only supported on Unix/Linux agents.","title":"DataMover job support"},{"location":"app-datamover/#amazon-s3-functionality","text":"The total volume of data and number of objects you can store are unlimited. Individual Amazon S3 objects can range in size from one byte (1 B) to five terabytes (5 TB). The largest object that can be uploaded in a single PUT is five gigabytes (5 GB). For objects larger than 100 megabytes (100 MB), customers should consider using the multipart upload capability. When using multipart upload, each part must be at least 5 MB in size, except the last part. So, in the list of files provided on the dialog box, each must be at least 5MB other than the last file in the list.","title":"Amazon S3 functionality"},{"location":"app-datamover/#hfs-functionality","text":"","title":"HFS functionality"},{"location":"app-datamover/#hortonworks-hadoop","text":"Download the Hortonworks Hadoop client libraries and copy into the Agent/lib directory. See Installing Hadoop client libraries , for information about obtaining and installing the libraries.","title":"Hortonworks Hadoop"},{"location":"app-datamover/#cloudera-hadoop","text":"Download the Cloudera Hadoop client libraries and copy into the Agent/lib directory. See Installing Hadoop client libraries , for information about obtaining and installing the libraries.","title":"Cloudera Hadoop"},{"location":"app-datamover/#mapr-hadoop","text":"To use DataMover for MapR Hadoop, the MapR client must be installed on the machine running the TA agent. The TA agent supports MapR client versions 1.2.9 and 2.0.0. It is the user's responsibility to ensure that the MapR client is installed properly and is communicating with the MapR cluster. For more information on how to set up the MapR client, see: http://www.mapr.com/doc/display/MapR/Setting+Up+the+Client No files need to be copied for MapR Hadoop. However, updates to the tagent.ini file are required. See HFS usage notes for details.","title":"MapR Hadoop"},{"location":"app-datamover/#hfs-usage-notes","text":"","title":"HFS usage notes"},{"location":"app-datamover/#agent-ini-file","text":"","title":"Agent ini file"},{"location":"app-datamover/#kerberos-configuration","text":"If an agent is going to access any Hadoop file system that is secured by Kerberos, the new Kerberos Realm and Kerberos KDC Name must be specified in the agent's tagent.ini file. Like other tagent.ini parameters, these values can be specified at a global (all) agent level or on a per agent basis. Unless both of these parameters are defined, the agent will not attempt Kerberos authentication, even if the Hadoop Data Mover Job has checked the Use Kerberos Authentication check box.","title":"Kerberos Configuration"},{"location":"app-datamover/#mapr-configuration","text":"When using MapR Hadoop on a 64-bit machine, add the following line to your tagent.ini file (assuming the MapR client is installed in the default location): jvmpara=-Djava.library.path=/opt/mapr/hadoop/hadoop-0.20.2/lib/native/Linux-amd64-64 When using MapR Hadoop on a 32-bit machine, add the following line to your tagent.ini file (assuming the MapR client is installed in the default location): jvmpara=-Djava.library.path=/opt/mapr/hadoop/hadoop-0.20.2/lib/native/Linux-i386-32 To use MapR Hadoop, you must also specify the location of the MapR Hadoop jar files. Use the MapRClasspath parameter to specify the full path to the required MapR Hadoop jar file directory. Add the following line to your tagent.ini file (assuming the MapR client is installed in the default location): maprclasspath=/opt/mapr/hadoop/hadoop-0.20.2/lib/*","title":"MapR Configuration"},{"location":"app-datamover/#user-configuration-file","text":"With this release of the agent, there is a new user configuration file, TdlUser.cfg, that specifies parameters for the runtime user associated with a job. It is located in the agent's root directory, for example, /opt/TIDAL/Agent/<name-of-agent> . The user configuration file has the following layout: parameter=value parameter=value [user-1] parameter=value parameter=value . .[user-2] parameter=value parameter=value A parameter value is specified in a parameter/value line which has the form parameter=value. Default configuration parameters to be applied to all users are specified before the first user-specific parameter values, which is referred to as the \u201cdefault section\u201d. To specify parameter values and/or to override a default parameter value for a particular user, add a section for that user. A user section starts with a \"user section\" line that contains the user name enclosed in brackets (\u201c[\", \u201c]\u201d) followed by a number of parameter/value lines. All parameter/value lines following a user section line up until the next user section line (or end of the file) are applied to that specific user. Parameter values specified in a user section override parameter values that are specified in the default section. Lines that start with the \"#\" character are ignored. The new user configuration parameters are KerberosPrincipal and KeyTabFilePath . These parameters specify the Principal and KeyTab file for the agent to use when performing Kerberos authentication.","title":"User configuration file"},{"location":"app-hadoop/","text":"Installing Hadoop client libraries Hadoop client libraries are required for processing the Hadoop-related DataMover, Hive, MapReduce, and Sqoop jobs. As of TA 6.5.5, Hadoop libraries are not included with TA . Instead, we provide a Maven script ( POM.xml ) to install the required libraries. If you do not already have Maven, you must download and install it. Obtain the POM.xm l file from the folder/directory named Hadoop on the CD and run the file script to download the required Hadoop client libraries. Instructions for obtaining Maven and downloading the Hadoop libraries are included in these sections: Installing Maven Downloading the Hadoop client library Note This section includes instructions for intalling Hadoop client libraries on Windows. Installing Maven Before installing Maven, your system must meet the following prerquisites: JDK must be installed. The JAVA_HOME environment variable must be set and point to your JDK. To download and install Maven: Download Maven 3 or above from https://maven.apache.org/download.cgi . Unzip apache-maven-<3-or-above>-bin.zip . Add the bin directory of the created directory (for example, apache-maven-3.3.9 ) to the PATH environment variable. Confirm a successful Maven installation by running the mvn -v command in a new shell. The result should look similar to the following: Downloading the Hadoop client library With Maven installed, you can now download the Hadoop client library. Maven scripts ( POM.xml ) are provided for the following distributions of Hadoop. Hadoop Distribution Type Versions Cloudera CDH5 Hortonworks HDP 2.4.x MapR 5.1.0 Note The Tidal Automation Compatibility Matrix contains the most current version information. To download and install the Hadoop client library: Download the POM.zip file. This file is provided in the /Hadoop directory in the TA 6.5.6 distribution package. Unzip the POM.zip file. The POM xml files needed by Maven are saved in the directory structure as shown: Open a Windows command prompt and navigate to the directory for the Hadoop distribution in which you are interested. For example, navigate to the CDH directory if you want to download Hadoop client libraries for Cloudera. Edit the POM.xml file to mention exact versions of MapR, Hadoop, Hive, and Sqoop that you are using. For example, for Cloudera the required properties could be edited as shown below: <properties> <Hadoop.version>2.6.0-cdh5.6.0</Hadoop.version> <Hive.version>1.1.0-cdh5.7.0</Hive.version> <Sqoop.version>1.4.6-cdh5.6.0</Sqoop.version> </properties> For MapR, you must also include the version of MapR used, as shown in the following example: <properties> <Hadoop.version>2.7.0-mapr-1602</Hadoop.version> <Hive.version>1.2.0-mapr-1605</Hive.version> <Sqoop.version>1.4.6-mapr-1601</Sqoop.version> <Mapr.version>5.1.0-mapr</Mapr.version> </properties> From the directory containing the Hadoop distribution you want, execute this command: mvn dependency:copy-dependencies -DoutputDirectory=<jar-download-directory> For example, running the following command from the CDH directory: mvn dependency:copy-dependencies -DoutputDirectory=C:\\CDHlib would insert the Cloudera Hadoop client libraries to the C:\\CDHlib directory.","title":"Installing Hadoop client libraries"},{"location":"app-hadoop/#installing-hadoop-client-libraries","text":"Hadoop client libraries are required for processing the Hadoop-related DataMover, Hive, MapReduce, and Sqoop jobs. As of TA 6.5.5, Hadoop libraries are not included with TA . Instead, we provide a Maven script ( POM.xml ) to install the required libraries. If you do not already have Maven, you must download and install it. Obtain the POM.xm l file from the folder/directory named Hadoop on the CD and run the file script to download the required Hadoop client libraries. Instructions for obtaining Maven and downloading the Hadoop libraries are included in these sections: Installing Maven Downloading the Hadoop client library Note This section includes instructions for intalling Hadoop client libraries on Windows.","title":"Installing Hadoop client libraries"},{"location":"app-hadoop/#installing-maven","text":"Before installing Maven, your system must meet the following prerquisites: JDK must be installed. The JAVA_HOME environment variable must be set and point to your JDK. To download and install Maven: Download Maven 3 or above from https://maven.apache.org/download.cgi . Unzip apache-maven-<3-or-above>-bin.zip . Add the bin directory of the created directory (for example, apache-maven-3.3.9 ) to the PATH environment variable. Confirm a successful Maven installation by running the mvn -v command in a new shell. The result should look similar to the following:","title":"Installing Maven"},{"location":"app-hadoop/#downloading-the-hadoop-client-library","text":"With Maven installed, you can now download the Hadoop client library. Maven scripts ( POM.xml ) are provided for the following distributions of Hadoop. Hadoop Distribution Type Versions Cloudera CDH5 Hortonworks HDP 2.4.x MapR 5.1.0 Note The Tidal Automation Compatibility Matrix contains the most current version information. To download and install the Hadoop client library: Download the POM.zip file. This file is provided in the /Hadoop directory in the TA 6.5.6 distribution package. Unzip the POM.zip file. The POM xml files needed by Maven are saved in the directory structure as shown: Open a Windows command prompt and navigate to the directory for the Hadoop distribution in which you are interested. For example, navigate to the CDH directory if you want to download Hadoop client libraries for Cloudera. Edit the POM.xml file to mention exact versions of MapR, Hadoop, Hive, and Sqoop that you are using. For example, for Cloudera the required properties could be edited as shown below: <properties> <Hadoop.version>2.6.0-cdh5.6.0</Hadoop.version> <Hive.version>1.1.0-cdh5.7.0</Hive.version> <Sqoop.version>1.4.6-cdh5.6.0</Sqoop.version> </properties> For MapR, you must also include the version of MapR used, as shown in the following example: <properties> <Hadoop.version>2.7.0-mapr-1602</Hadoop.version> <Hive.version>1.2.0-mapr-1605</Hive.version> <Sqoop.version>1.4.6-mapr-1601</Sqoop.version> <Mapr.version>5.1.0-mapr</Mapr.version> </properties> From the directory containing the Hadoop distribution you want, execute this command: mvn dependency:copy-dependencies -DoutputDirectory=<jar-download-directory> For example, running the following command from the CDH directory: mvn dependency:copy-dependencies -DoutputDirectory=C:\\CDHlib would insert the Cloudera Hadoop client libraries to the C:\\CDHlib directory.","title":"Downloading the Hadoop client library"},{"location":"index-orig/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"index-orig/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"index-orig/#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"index-orig/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"intro-about/","text":"About agents Companies often need to provide centralized scheduling and administration of workloads that span multiple machines and multiple locations. TA Master/agent architecture provides that capability. An agent is a separate installation component of Tidal Automation that runs jobs on behalf of the Master. Offloading jobs to agents frees the Master for intensive scheduling tasks such as production compiles. Agents exist for various platforms including Windows, Unix, z/OS and OpenVMS environments. Check with your sales representative for the current list of the types of agents available. Agents in a Tidal network In the basic TA network, the Master uses a centralized database, containing all calendar and job scheduling information. One or more agent machines execute the production schedule. One or more client machines provides the TA user interface or console. The only prerequisite for the Master/agent relationship is that the machine acting as the Master must be on the same TCP/IP network as the machines serving as agents. Agents: Runs on behalf of the TA Master Monitors file events and dependencies Communicates data back to the TA Master Warning : It is recommended that no more than five agents be run on the minimum hardware platform. However, the number of agents that can be run on a given server depends upon the CPU and memory resources available on the machine. Add a single agent at a time and gauge the effect of each added agent on system performance before adding more. You have to experiment with the configuration to achieve optimal results. Platform support for agents TA provides agents for Windows, Unix, z/OS and OpenVMS environments. The platform support for agents is documented in TA Compatibility Matrix. Agent-specific documentation is provided for these agents: OpenVMS z/OS Regulatory : It is recommended that no more than five agents be run on the minimum hardware platform. However, the number of agents that can be run on a given server depends upon the CPU and memory resources available on the machine. Add a single agent at a time and gauge the effect of each added agent on system performance before adding more. You have to experiment with the configuration to achieve optimal results.","title":"About agents"},{"location":"intro-about/#about-agents","text":"Companies often need to provide centralized scheduling and administration of workloads that span multiple machines and multiple locations. TA Master/agent architecture provides that capability. An agent is a separate installation component of Tidal Automation that runs jobs on behalf of the Master. Offloading jobs to agents frees the Master for intensive scheduling tasks such as production compiles. Agents exist for various platforms including Windows, Unix, z/OS and OpenVMS environments. Check with your sales representative for the current list of the types of agents available.","title":"About agents"},{"location":"intro-about/#agents-in-a-tidal-network","text":"In the basic TA network, the Master uses a centralized database, containing all calendar and job scheduling information. One or more agent machines execute the production schedule. One or more client machines provides the TA user interface or console. The only prerequisite for the Master/agent relationship is that the machine acting as the Master must be on the same TCP/IP network as the machines serving as agents. Agents: Runs on behalf of the TA Master Monitors file events and dependencies Communicates data back to the TA Master Warning : It is recommended that no more than five agents be run on the minimum hardware platform. However, the number of agents that can be run on a given server depends upon the CPU and memory resources available on the machine. Add a single agent at a time and gauge the effect of each added agent on system performance before adding more. You have to experiment with the configuration to achieve optimal results.","title":"Agents in a Tidal network"},{"location":"intro-about/#platform-support-for-agents","text":"TA provides agents for Windows, Unix, z/OS and OpenVMS environments. The platform support for agents is documented in TA Compatibility Matrix. Agent-specific documentation is provided for these agents: OpenVMS z/OS Regulatory : It is recommended that no more than five agents be run on the minimum hardware platform. However, the number of agents that can be run on a given server depends upon the CPU and memory resources available on the machine. Add a single agent at a time and gauge the effect of each added agent on system performance before adding more. You have to experiment with the configuration to achieve optimal results.","title":"Platform support for agents"},{"location":"intro-types/","text":"Types of agents Intro text Types of TA Master agents Intro text Master Fault-tolerant Backup Types of OS agents Intro text Windows Java-based (Linux, zOS etc) Agents for adapters Intro text","title":"Types of agents"},{"location":"intro-types/#types-of-agents","text":"Intro text","title":"Types of agents"},{"location":"intro-types/#types-of-ta-master-agents","text":"Intro text Master Fault-tolerant Backup","title":"Types of TA Master agents"},{"location":"intro-types/#types-of-os-agents","text":"Intro text Windows Java-based (Linux, zOS etc)","title":"Types of OS agents"},{"location":"intro-types/#agents-for-adapters","text":"Intro text","title":"Agents for adapters"},{"location":"intro/","text":"Introduction An agent is a separate installation component of Tidal Automation that runs jobs on behalf of the Master. Offloading jobs to agents frees the Master for intensive scheduling tasks such as production compiles. Agents exist for various platforms including Windows, Unix, z/OS and OpenVMS environments. Check with your sales representative for the current list of the types of agents available. Warning : It is recommended that no more than five agents be run on the minimum hardware platform. However, the number of agents that can be run on a given server depends upon the CPU and memory resources available on the machine. Add a single agent at a time and gauge the effect of each added agent on system performance before adding more. You have to experiment with the configuration to achieve optimal results. About agents Companies often need to provide centralized scheduling and administration of workloads that span multiple machines and multiple locations. TA Master/agent architecture provides that capability. In the basic TA network, the Master uses a centralized database, containing all calendar and job scheduling information. One or more agent machines execute the production schedule. One or more client machines provides the TA user interface or console. The only prerequisite for the Master/agent relationship is that the machine acting as the Master must be on the same TCP/IP network as the machines serving as agents. Agents in a Tidal network Add info and illustration of network architecture How jobs flow between a TA Master and an agent TBD Types of TA Master agents Intro text Master Fault-tolerant Backup Types of OS agents Intro text Windows Java-based (Linux, zOS etc) Agents for adapters Intro text","title":"Introduction"},{"location":"intro/#introduction","text":"An agent is a separate installation component of Tidal Automation that runs jobs on behalf of the Master. Offloading jobs to agents frees the Master for intensive scheduling tasks such as production compiles. Agents exist for various platforms including Windows, Unix, z/OS and OpenVMS environments. Check with your sales representative for the current list of the types of agents available. Warning : It is recommended that no more than five agents be run on the minimum hardware platform. However, the number of agents that can be run on a given server depends upon the CPU and memory resources available on the machine. Add a single agent at a time and gauge the effect of each added agent on system performance before adding more. You have to experiment with the configuration to achieve optimal results.","title":"Introduction"},{"location":"intro/#about-agents","text":"Companies often need to provide centralized scheduling and administration of workloads that span multiple machines and multiple locations. TA Master/agent architecture provides that capability. In the basic TA network, the Master uses a centralized database, containing all calendar and job scheduling information. One or more agent machines execute the production schedule. One or more client machines provides the TA user interface or console. The only prerequisite for the Master/agent relationship is that the machine acting as the Master must be on the same TCP/IP network as the machines serving as agents.","title":"About agents"},{"location":"intro/#agents-in-a-tidal-network","text":"Add info and illustration of network architecture","title":"Agents in a Tidal network"},{"location":"intro/#how-jobs-flow-between-a-ta-master-and-an-agent","text":"TBD","title":"How jobs flow between a TA Master and an agent"},{"location":"intro/#types-of-ta-master-agents","text":"Intro text Master Fault-tolerant Backup","title":"Types of TA Master agents"},{"location":"intro/#types-of-os-agents","text":"Intro text Windows Java-based (Linux, zOS etc)","title":"Types of OS agents"},{"location":"intro/#agents-for-adapters","text":"Intro text","title":"Agents for adapters"},{"location":"java-cluster/","text":"Configuring a cluster to run a Java-based agent A Java-based agent can run in a Unix cluster environment. The following diagram illustrates how Tidal Automation is configured in an environment with Unix cluster. The TA Master component connects to agent instances associated to a virtual machine using the virtual machine name and IP address and the port number. This allows the TA Master to maintain the agent connection when the cluster management software moves the virtual machine to another participating node. Prerequisites To configure the TA Agent for Unix on a cluster to follow the virtual machine, the following prerequisites must be met: The SAN/NFS agent installation location must be mounted at the same mount point on all of the cluster nodes. Java Virtual Machine (JVM) prerequisites must be installed on all of the nodes. These prerequisites for the JVM include installing all OS patches, maintaining kernel parameters, etc. The same JVM must be installed on each of the physical nodes (and, whenever possible, the JVM should be installed in the same directory location on each of the nodes.) The agent owner account must be accessible from all of the nodes. The minimum requirements for the TA agent must be met on each of the individual nodes. The installation and configuration of TA Agents for Unix in a cluster can be broken down into the following four steps: Installing agent files on the SAN/NFS mount location. Configuring agent instances (only one instance per virtual machine). Configuring the cluster virtual machine. Configuring TA to connect to the agent instances on a virtual machine. Installing agents on a SAN/NFS location To install the agent on the SAN/NFS location: 1. Using FTP, copy the agent installation files to one of the participating nodes in the cluster. Login as root to the same physical node where the agent installation files were copied. Change to the directory where the agent installation files were copied. Follow the normal agent installation procedure that is described in the Installing Windows agents, page 4, with the following exceptions: When entering a location for the agent files, select the SAN/NFS location (visible to all the nodes). Ensure that the agent owner is a NIS user or if the agent owner is a local user on all of the participating nodes than the agent owner must have the same UID and GID. At the end of the installation procedure, do not configure any agent instances. Configuring agent instances on a virtual machine To configure agent instances: Identify each of the virtual machines that require an agent instance associated with it. Login to a cluster node as the agent owner. Change to the agent bin directory and run the tagent \u2013config command to begin the agent configuration. Select the Add Instance option and add one instance for each of the virtual machines. Tidal recommends giving each agent instance the same name as the virtual machine hostname to help identify which instance is associated to which virtual machine. The port number for each agent instance must be unique. The agent instance configuration file will look similar to the following example that shows a configuration file for a cluster with four virtual machines: Sample agent instance configuration file [/opt/TiDAL/Agent/bin/tagent.ini] # ================================================================ # Agent Configuration Information # ================================================================ [config] agents=vm1,vm2,vm3,vm4 [vm1] port=5912 [vm2] port=5913 [vm3] port=5914 [vm4] port=5915 Managing virtual machine clusters This step varies from one cluster solution to another but basically all cluster solutions require the following three operations to enable the agent instance to be associated to the virtual machine: Start the agent instance Monitor the health of an agent instance Stop an agent instance Starting an agent instances To start an agent instance, issue the following command: su <agent owner> -c \"<agent install location>/bin/tagent <agent instance name> start\" Replace the text in brackets < > with the name of your agent owner and agent instance and the directory pathname to the agent files. Monitoring the health of an agent Check the status of the agent with the tagent status command, as illustrated in the followin sample script: #!/bin/sh cd /agentdir/bin/ ./tagent $1 status | grep \"Down\" if [ $? -eq 0] then echo \"Agent $1 is down\" exit 1 fi exit 0 Stopping an agent instances Stop an agent instance with the following command: < agent-install-location >/bin/tagent < agent-instance-name > stop Replace the text in brackets < > with the name of your agent instance and the directory pathname to the agent files. Configuring TA to connnect to agent instances on a virtual machine Configuring the connection to the agent instances in the TA client uses the same procedure as configuring other agent connections with the following exceptions: Use the virtual machine hostname/IP address instead of the physical node hostname. Use the agent instance port number for the agent instance that is associated with the virtual machine. The following diagram illustrates an agent installed on a two node cluster with four virtual machines.","title":"Configuring a cluster to run a Java-based agent"},{"location":"java-cluster/#configuring-a-cluster-to-run-a-java-based-agent","text":"A Java-based agent can run in a Unix cluster environment. The following diagram illustrates how Tidal Automation is configured in an environment with Unix cluster. The TA Master component connects to agent instances associated to a virtual machine using the virtual machine name and IP address and the port number. This allows the TA Master to maintain the agent connection when the cluster management software moves the virtual machine to another participating node.","title":"Configuring a cluster to run a Java-based agent"},{"location":"java-cluster/#prerequisites","text":"To configure the TA Agent for Unix on a cluster to follow the virtual machine, the following prerequisites must be met: The SAN/NFS agent installation location must be mounted at the same mount point on all of the cluster nodes. Java Virtual Machine (JVM) prerequisites must be installed on all of the nodes. These prerequisites for the JVM include installing all OS patches, maintaining kernel parameters, etc. The same JVM must be installed on each of the physical nodes (and, whenever possible, the JVM should be installed in the same directory location on each of the nodes.) The agent owner account must be accessible from all of the nodes. The minimum requirements for the TA agent must be met on each of the individual nodes. The installation and configuration of TA Agents for Unix in a cluster can be broken down into the following four steps: Installing agent files on the SAN/NFS mount location. Configuring agent instances (only one instance per virtual machine). Configuring the cluster virtual machine. Configuring TA to connect to the agent instances on a virtual machine.","title":"Prerequisites"},{"location":"java-cluster/#installing-agents-on-a-sannfs-location","text":"To install the agent on the SAN/NFS location: 1. Using FTP, copy the agent installation files to one of the participating nodes in the cluster. Login as root to the same physical node where the agent installation files were copied. Change to the directory where the agent installation files were copied. Follow the normal agent installation procedure that is described in the Installing Windows agents, page 4, with the following exceptions: When entering a location for the agent files, select the SAN/NFS location (visible to all the nodes). Ensure that the agent owner is a NIS user or if the agent owner is a local user on all of the participating nodes than the agent owner must have the same UID and GID. At the end of the installation procedure, do not configure any agent instances.","title":"Installing agents on a SAN/NFS location"},{"location":"java-cluster/#configuring-agent-instances-on-a-virtual-machine","text":"To configure agent instances: Identify each of the virtual machines that require an agent instance associated with it. Login to a cluster node as the agent owner. Change to the agent bin directory and run the tagent \u2013config command to begin the agent configuration. Select the Add Instance option and add one instance for each of the virtual machines. Tidal recommends giving each agent instance the same name as the virtual machine hostname to help identify which instance is associated to which virtual machine. The port number for each agent instance must be unique. The agent instance configuration file will look similar to the following example that shows a configuration file for a cluster with four virtual machines:","title":"Configuring agent instances on a virtual machine"},{"location":"java-cluster/#sample-agent-instance-configuration-file","text":"[/opt/TiDAL/Agent/bin/tagent.ini] # ================================================================ # Agent Configuration Information # ================================================================ [config] agents=vm1,vm2,vm3,vm4 [vm1] port=5912 [vm2] port=5913 [vm3] port=5914 [vm4] port=5915","title":"Sample agent instance configuration file"},{"location":"java-cluster/#managing-virtual-machine-clusters","text":"This step varies from one cluster solution to another but basically all cluster solutions require the following three operations to enable the agent instance to be associated to the virtual machine: Start the agent instance Monitor the health of an agent instance Stop an agent instance","title":"Managing virtual machine clusters"},{"location":"java-cluster/#starting-an-agent-instances","text":"To start an agent instance, issue the following command: su <agent owner> -c \"<agent install location>/bin/tagent <agent instance name> start\" Replace the text in brackets < > with the name of your agent owner and agent instance and the directory pathname to the agent files.","title":"Starting an agent instances"},{"location":"java-cluster/#monitoring-the-health-of-an-agent","text":"Check the status of the agent with the tagent status command, as illustrated in the followin sample script: #!/bin/sh cd /agentdir/bin/ ./tagent $1 status | grep \"Down\" if [ $? -eq 0] then echo \"Agent $1 is down\" exit 1 fi exit 0","title":"Monitoring the health of an agent"},{"location":"java-cluster/#stopping-an-agent-instances","text":"Stop an agent instance with the following command: < agent-install-location >/bin/tagent < agent-instance-name > stop Replace the text in brackets < > with the name of your agent instance and the directory pathname to the agent files.","title":"Stopping an agent instances"},{"location":"java-cluster/#configuring-ta-to-connnect-to-agent-instances-on-a-virtual-machine","text":"Configuring the connection to the agent instances in the TA client uses the same procedure as configuring other agent connections with the following exceptions: Use the virtual machine hostname/IP address instead of the physical node hostname. Use the agent instance port number for the agent instance that is associated with the virtual machine. The following diagram illustrates an agent installed on a two node cluster with four virtual machines.","title":"Configuring TA to connnect to agent instances on a virtual machine"},{"location":"java-config/","text":"Configuring Java-based agents Adding an agent instance Modifying an agent instance Deleting an agent instance Configuring agent parameters Adding agent instances You can configure Unix agents (add and delete agent instances) using the Agent Configuration Menu . Note While the installer must be run as the root user, the user who runs the agent service must have read access to the directory in which the agent is installed ( /opt , by default). To display this menu: Log on as agent owner on the agent machine. Go to the bin directory by entering: cd /opt/TIDAL/Agent/bin Type in the following: ./tagent config The Agent Configuration Menu opens. Deleting agent instances To add an instance: In the Agent Configuration Menu , enter 1 ; then select Enter . Enter the name of the agent, its port number, and the directory path to the Java binaries; then select Enter . Select Y , then Enter , to add the agent instance. Start the agent by entering the following shell command: ./tagent <agent name> start Configuring agent parameters You can configure the parameters of an agent by changing the parameter values in the tagent.ini file. The tagent.ini file is located in the Unix agent directory. If the default location was used during the agent installation, the agent files are located at /opt/TIDAL/Agent/bin . Following is an example of a tagent.ini file: # ============================================= # Agent Configuration Information # =========================================== [config] agents=sun02,sun11,aix02,test degbug=yes ovb=tidaldebug java=/usr/bin/ #sslvldcrt=n sshvldhst=/home/secure/prd2_id_rsa.pub sslvldhst=/home/secure/vvm1.pem [test] port=5915 java=/usr/j2rel.4.2_06/bin minmem=32 maxmem=64 logdays=5 [sun02] port=5915 java=/usr/j2rel.4.2_06/bin sslvldcrt=n [sun11] port=5915 encryptonly=y [aix02] port=5915 java=/usr/java5_64/bin sslvldcrt=/home/secure/host.crt ulimitold=y Restart the agent after modifying any of the agent\u2019s parameters. You can set the following agent parameters. Parameter Description agtresource Options for monitoring the following agent resources at specified time intervals, in milliseconds (default=15000): CPU : Monitors CPU usage VMEM : Monitors virtual memory usage Setting this parameter takes the following forms: agtresource=CPU;VMEM : Montors both resouces at the default 15-second intervals. agtresource=CPU,10000 : Monitors only CPU usage at 10-second intervals. agtresource=CPU,10000;VMEM,20000 : Monitors CPU usage at 10-second intervals and virtual memory usage at 20-second intervals. The minimum interval is 5000 milliseconds, or 5 seconds. cpuload Whether to send agent system load information to the TA Master. y : Send load information to the TA Master at one-minute intervals. n (default): Send no information. Note : Enabling this parameter is typically useful only when an Agent List Definition sets the List Type field to a balanced option, as described in Types of agent lists . debug Whether to enable low-level debugging of agent activity. Set the value to y to enable debugging. encryptonly Whether to disable agents connections to any TA Master than disables message encryption. Valid values include N (default) and Y. fp Pathname of a file that defines environment variables for an agent instance, in the form: fp=/folder/file . Each agent instance can be assigned its own environment file and its associated environment variables with their various values. Each variable specified in the environment file should follow a variable=value format as in the following examples: TZ=CST SchedulerT=1 PATH=/usr/sbin ftptimeout Timeout, in milliseconds, for an FTP connection. Setting the value to 0 results in no timeout for the connection. homedir Whether to use the agent\u2019s home directory or the runtime user\u2019s home directory as the working directory: y : Uses the runtime user\u2019s home directory. n or omitted (default): Uses the agent\u2019s home directory (where the agent software is installed). Note : Enabling this parameter overrides the working directory setting in the TA Master for all jobs to use the user\u2019s home directory. java Pathname for the Java software. jobkillwait Time interval, in seconds, between sending a SIGTERM warning that a Unix job is about to be aborted and sending the SIGKILL signal to abort the job. Default: 5 seconds. jobstopwait Time interval, in seconds, between sending a SIGSTP warning that a Unix job is about to be put on hold and sending the SIGSTOP signal to pause the job. Default: 1 second. logdays Number of days to preserve log files. minmem/maxmem Minimum and maximum RAM, in MB, to allocate for agent processes. Defaults: minmem=16. maxmem=48. multiftpstd How to handle FTP multi-file MGET, MPUT, or MDELETE actions that operate on no files. Values include: Y (default): Allow the job to complete without reporting errors. N : Allow the job to complete abnormally if the actions operated on no files. ovb Whether to enable maximum level of debug logging for agent activity. Set the value to tidaldebug to enable this logging. profile Whether to override the For Unix, source user\u2019s profile setting on the Options tab of the Job Definition dialog box: y : Causes the runtime user profile to be used for all jobs run on the agent. n or omitted (default): Causes the runtime user profile to be used only for jobs whose definitions enable the setting. sftpumask Permission mask (4-digit octal) for files created on a Unix-based system with the SFTP PUT actions. Default= 0022 . sshvldhst Location of SSH host key file. For SFTP host validation, the location of the file containing the public keys for the servers that SFTP connections will be established with. The host key file provides a list of hosts and their associated public keys. The format of the file is similar to that used in OpenSSH. Each line contains the name of a host followed by its IP address (separated by a comma), the type of key it has, and its key (in base-64 printable form). For example: jackspc,192.168.1.1 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAIE... sslvldcrt Whether to disable FTPS SSL certificate validation by Tidal Automation agents. Default= Y . Tidal Automation agents validate the host defined in FTPS SSL certificate. This host validation feature can be disabled by specifying a SSLVLDCRT parameter on the agent command line. The default is SSLVLDCRT=Y (yes). You can turn this off by specifying SSLVLDCRT=N . sslvldhst Location of file containing host certification key file. For FTPS host validation, the location of the file containing the public host certificates (generally self-signed), if not authenticated through a certificate authority. The certificates in the file must be of the OpenSSL PEM format and be bracketed as follows: -----BEGIN CERTIFICATE----- ... first certificate ... ... second certificate ... -----END CERTIFICATE-----","title":"Configuring Java-based agents"},{"location":"java-config/#configuring-java-based-agents","text":"Adding an agent instance Modifying an agent instance Deleting an agent instance Configuring agent parameters","title":"Configuring Java-based agents"},{"location":"java-config/#adding-agent-instances","text":"You can configure Unix agents (add and delete agent instances) using the Agent Configuration Menu . Note While the installer must be run as the root user, the user who runs the agent service must have read access to the directory in which the agent is installed ( /opt , by default). To display this menu: Log on as agent owner on the agent machine. Go to the bin directory by entering: cd /opt/TIDAL/Agent/bin Type in the following: ./tagent config The Agent Configuration Menu opens.","title":"Adding agent instances"},{"location":"java-config/#deleting-agent-instances","text":"To add an instance: In the Agent Configuration Menu , enter 1 ; then select Enter . Enter the name of the agent, its port number, and the directory path to the Java binaries; then select Enter . Select Y , then Enter , to add the agent instance. Start the agent by entering the following shell command: ./tagent <agent name> start","title":"Deleting agent instances"},{"location":"java-config/#configuring-agent-parameters","text":"You can configure the parameters of an agent by changing the parameter values in the tagent.ini file. The tagent.ini file is located in the Unix agent directory. If the default location was used during the agent installation, the agent files are located at /opt/TIDAL/Agent/bin . Following is an example of a tagent.ini file: # ============================================= # Agent Configuration Information # =========================================== [config] agents=sun02,sun11,aix02,test degbug=yes ovb=tidaldebug java=/usr/bin/ #sslvldcrt=n sshvldhst=/home/secure/prd2_id_rsa.pub sslvldhst=/home/secure/vvm1.pem [test] port=5915 java=/usr/j2rel.4.2_06/bin minmem=32 maxmem=64 logdays=5 [sun02] port=5915 java=/usr/j2rel.4.2_06/bin sslvldcrt=n [sun11] port=5915 encryptonly=y [aix02] port=5915 java=/usr/java5_64/bin sslvldcrt=/home/secure/host.crt ulimitold=y Restart the agent after modifying any of the agent\u2019s parameters. You can set the following agent parameters. Parameter Description agtresource Options for monitoring the following agent resources at specified time intervals, in milliseconds (default=15000): CPU : Monitors CPU usage VMEM : Monitors virtual memory usage Setting this parameter takes the following forms: agtresource=CPU;VMEM : Montors both resouces at the default 15-second intervals. agtresource=CPU,10000 : Monitors only CPU usage at 10-second intervals. agtresource=CPU,10000;VMEM,20000 : Monitors CPU usage at 10-second intervals and virtual memory usage at 20-second intervals. The minimum interval is 5000 milliseconds, or 5 seconds. cpuload Whether to send agent system load information to the TA Master. y : Send load information to the TA Master at one-minute intervals. n (default): Send no information. Note : Enabling this parameter is typically useful only when an Agent List Definition sets the List Type field to a balanced option, as described in Types of agent lists . debug Whether to enable low-level debugging of agent activity. Set the value to y to enable debugging. encryptonly Whether to disable agents connections to any TA Master than disables message encryption. Valid values include N (default) and Y. fp Pathname of a file that defines environment variables for an agent instance, in the form: fp=/folder/file . Each agent instance can be assigned its own environment file and its associated environment variables with their various values. Each variable specified in the environment file should follow a variable=value format as in the following examples: TZ=CST SchedulerT=1 PATH=/usr/sbin ftptimeout Timeout, in milliseconds, for an FTP connection. Setting the value to 0 results in no timeout for the connection. homedir Whether to use the agent\u2019s home directory or the runtime user\u2019s home directory as the working directory: y : Uses the runtime user\u2019s home directory. n or omitted (default): Uses the agent\u2019s home directory (where the agent software is installed). Note : Enabling this parameter overrides the working directory setting in the TA Master for all jobs to use the user\u2019s home directory. java Pathname for the Java software. jobkillwait Time interval, in seconds, between sending a SIGTERM warning that a Unix job is about to be aborted and sending the SIGKILL signal to abort the job. Default: 5 seconds. jobstopwait Time interval, in seconds, between sending a SIGSTP warning that a Unix job is about to be put on hold and sending the SIGSTOP signal to pause the job. Default: 1 second. logdays Number of days to preserve log files. minmem/maxmem Minimum and maximum RAM, in MB, to allocate for agent processes. Defaults: minmem=16. maxmem=48. multiftpstd How to handle FTP multi-file MGET, MPUT, or MDELETE actions that operate on no files. Values include: Y (default): Allow the job to complete without reporting errors. N : Allow the job to complete abnormally if the actions operated on no files. ovb Whether to enable maximum level of debug logging for agent activity. Set the value to tidaldebug to enable this logging. profile Whether to override the For Unix, source user\u2019s profile setting on the Options tab of the Job Definition dialog box: y : Causes the runtime user profile to be used for all jobs run on the agent. n or omitted (default): Causes the runtime user profile to be used only for jobs whose definitions enable the setting. sftpumask Permission mask (4-digit octal) for files created on a Unix-based system with the SFTP PUT actions. Default= 0022 . sshvldhst Location of SSH host key file. For SFTP host validation, the location of the file containing the public keys for the servers that SFTP connections will be established with. The host key file provides a list of hosts and their associated public keys. The format of the file is similar to that used in OpenSSH. Each line contains the name of a host followed by its IP address (separated by a comma), the type of key it has, and its key (in base-64 printable form). For example: jackspc,192.168.1.1 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAIE... sslvldcrt Whether to disable FTPS SSL certificate validation by Tidal Automation agents. Default= Y . Tidal Automation agents validate the host defined in FTPS SSL certificate. This host validation feature can be disabled by specifying a SSLVLDCRT parameter on the agent command line. The default is SSLVLDCRT=Y (yes). You can turn this off by specifying SSLVLDCRT=N . sslvldhst Location of file containing host certification key file. For FTPS host validation, the location of the file containing the public host certificates (generally self-signed), if not authenticated through a certificate authority. The certificates in the file must be of the OpenSSL PEM format and be bracketed as follows: -----BEGIN CERTIFICATE----- ... first certificate ... ... second certificate ... -----END CERTIFICATE-----","title":"Configuring agent parameters"},{"location":"java-install/","text":"Installing Java-based agents Companies often need to provide centralized scheduling and administration of workloads that span multiple machines and multiple locations. TA Master/agent architecture provides that capability. In the basic TA network, the TA Master uses a centralized database, containing all calendar and job scheduling information. One or more agent machines execute the production schedule. One or more client machines provides the TA user interface or console. The only prerequisite for the master/agent relationship is that the machine acting as the TA Master must be on the same TCP/IP network as the machines serving as agents. Before installing a Java-based TA agent, backup your files and gather the following information: Name of the user who will own the agent Port number for the agent Directory path for the Java Virtual Machine (JVM) To install the agent from the command line: Note While the installer must be run as the root user, the user who runs the agent service must have read access to the directory in which the agent is installed ( /opt , by default). Download the Tidal Automation Agent for Linux/Unix software. Login as root. Copy the install.sh and install.tar files to your temp directory. Note Do not unpack the install.tar file. The file will automatically unpack during the installation process. Change the permissions on the install.sh file in the directory to make the file executable: chmod 554 install.sh install.tar Begin the installation by entering: ./install.sh The installation program displays an introductory dialog box. Enter Y to continue the installation, and select Enter . The Select the Owner dialog box opens. The top of the screen shows the users defined on the machine. In some cases, you might want to select a user who is not defined on the local machine but is defined as a NIS user allowing the user to install over the network. Enter the name of the user to own the agent. Note Carefully consider which user you use to run the agent. You might want to create a user specifically for this purpose. Press Enter. In the Select the Location panel, enter Y; then select Enter. Note Carefully consider which user to run the agent as. You might want to create a user specifically for this purpose. The Agent Configuration Menu dialog box opens. Type 1 to select the Add Instance option; then select Enter . The Select the Location for the Agent Files dialog box opens. Enter the information you gathered before beginning installation: Name to call the agent Number of the port the agent should use Directory path for the Java binary files (JVM) Select Enter . A confirmation box displays the information that you entered. Do either of the following: If the information is correct, press Enter . If the information is not correct, type n . You are prompted again for the name, port number, and directory path for the agent.","title":"Installing Java-based agents"},{"location":"java-install/#installing-java-based-agents","text":"Companies often need to provide centralized scheduling and administration of workloads that span multiple machines and multiple locations. TA Master/agent architecture provides that capability. In the basic TA network, the TA Master uses a centralized database, containing all calendar and job scheduling information. One or more agent machines execute the production schedule. One or more client machines provides the TA user interface or console. The only prerequisite for the master/agent relationship is that the machine acting as the TA Master must be on the same TCP/IP network as the machines serving as agents. Before installing a Java-based TA agent, backup your files and gather the following information: Name of the user who will own the agent Port number for the agent Directory path for the Java Virtual Machine (JVM) To install the agent from the command line: Note While the installer must be run as the root user, the user who runs the agent service must have read access to the directory in which the agent is installed ( /opt , by default). Download the Tidal Automation Agent for Linux/Unix software. Login as root. Copy the install.sh and install.tar files to your temp directory. Note Do not unpack the install.tar file. The file will automatically unpack during the installation process. Change the permissions on the install.sh file in the directory to make the file executable: chmod 554 install.sh install.tar Begin the installation by entering: ./install.sh The installation program displays an introductory dialog box. Enter Y to continue the installation, and select Enter . The Select the Owner dialog box opens. The top of the screen shows the users defined on the machine. In some cases, you might want to select a user who is not defined on the local machine but is defined as a NIS user allowing the user to install over the network. Enter the name of the user to own the agent. Note Carefully consider which user you use to run the agent. You might want to create a user specifically for this purpose. Press Enter. In the Select the Location panel, enter Y; then select Enter. Note Carefully consider which user to run the agent as. You might want to create a user specifically for this purpose. The Agent Configuration Menu dialog box opens. Type 1 to select the Add Instance option; then select Enter . The Select the Location for the Agent Files dialog box opens. Enter the information you gathered before beginning installation: Name to call the agent Number of the port the agent should use Directory path for the Java binary files (JVM) Select Enter . A confirmation box displays the information that you entered. Do either of the following: If the information is correct, press Enter . If the information is not correct, type n . You are prompted again for the name, port number, and directory path for the agent.","title":"Installing Java-based agents"},{"location":"java-manage/","text":"Managing Java-based agents Starting and stopping agents on Unix You can start or stop an agent by entering the following commands: ./tagent <agent name> start -or- ./tagent <agent name> stop Notes You should stop all Unix agents before rebooting the Unix system. Tidal recommends adding the agent stop command to a Unix system shutdown script to be used when restarting a Unix system. When issuing the tagent start command, verify that you are logged on as the user intended to run the agent. Checking the status of an agent To check the agent status on Unix: Run this command: ./tagent <agent name> status Preventing unauthorized use of a Unix agent The Unix agent can be configured to allow only specific users to run jobs on that agent. A list of users can be created to exclude or allow users access to the agent. If an unauthorized user tries to run a job on an agent, the job will end with an \u201cError Occurred\u201d status. To exclude users from a Unix agent: Login as the owner of the agent. Create a file called Users.cfg in the agent\u2019s root directory, e.g., /opt/TIDAL/Agent/ . Note The file name, Users.cfg , is case sensitive, so only the first letter should be capitalized and the rest of the name should be lower-case. Change the Users.cfg file permissions to limit access to just the agent owner, by entering: chmod 700 Users.cfg In the Users.cfg file, enter: EXCLUDE You alternatively use INCLUDE to specify an enumerated list of users. List those users that will be prohibited from accessing the agent. Each user must be on a separate line, as follows: EXCLUDE JDegnan MCarpent TESUser If the list of users to exclude is long, enter INCLUDE instead of EXCLUDE . Then you can list the users to give access to the agent if this is easier. To ensure that the changes take effect, stop and restart the agent. -or- Disconnect and reconnect the client connection to the agent. Note While this procedure prevents unauthorized users from running system commands on an agent for which they are excluded, FTP jobs can still be run from the agent because an user does not login to an agent for FTP access.","title":"Managing Java-based agents"},{"location":"java-manage/#managing-java-based-agents","text":"","title":"Managing Java-based agents"},{"location":"java-manage/#starting-and-stopping-agents-on-unix","text":"You can start or stop an agent by entering the following commands: ./tagent <agent name> start -or- ./tagent <agent name> stop Notes You should stop all Unix agents before rebooting the Unix system. Tidal recommends adding the agent stop command to a Unix system shutdown script to be used when restarting a Unix system. When issuing the tagent start command, verify that you are logged on as the user intended to run the agent.","title":"Starting and stopping agents on Unix"},{"location":"java-manage/#checking-the-status-of-an-agent","text":"To check the agent status on Unix: Run this command: ./tagent <agent name> status","title":"Checking the status of an agent"},{"location":"java-manage/#preventing-unauthorized-use-of-a-unix-agent","text":"The Unix agent can be configured to allow only specific users to run jobs on that agent. A list of users can be created to exclude or allow users access to the agent. If an unauthorized user tries to run a job on an agent, the job will end with an \u201cError Occurred\u201d status. To exclude users from a Unix agent: Login as the owner of the agent. Create a file called Users.cfg in the agent\u2019s root directory, e.g., /opt/TIDAL/Agent/ . Note The file name, Users.cfg , is case sensitive, so only the first letter should be capitalized and the rest of the name should be lower-case. Change the Users.cfg file permissions to limit access to just the agent owner, by entering: chmod 700 Users.cfg In the Users.cfg file, enter: EXCLUDE You alternatively use INCLUDE to specify an enumerated list of users. List those users that will be prohibited from accessing the agent. Each user must be on a separate line, as follows: EXCLUDE JDegnan MCarpent TESUser If the list of users to exclude is long, enter INCLUDE instead of EXCLUDE . Then you can list the users to give access to the agent if this is easier. To ensure that the changes take effect, stop and restart the agent. -or- Disconnect and reconnect the client connection to the agent. Note While this procedure prevents unauthorized users from running system commands on an agent for which they are excluded, FTP jobs can still be run from the agent because an user does not login to an agent for FTP access.","title":"Preventing unauthorized use of a Unix agent"},{"location":"secure-agents/","text":"Securing agent and TA Master connections Each agent includes a Masters.cfg file that lets you strictly control which Tidal Automation Master instances can connect to it. You can uniquely identify the specific TA Masters to which a TA agent will create connections by specifying any of the following: TA Master alias TA Master alias and a specific local TCP/IP address TA Master alias, the specific local TCP/IP address, and a global TCP/IP address The Masters.cfg file must be created in the agent\u2019s local directory. This directory is in the install path of the agent and has the name of the agent as it was specified when the agent was defined, similar to the following default locations: For 32-bit Windows C:\\Program Files\\TIDAL\\Agent\\TIDAL_AGENT_1 For 64-bit Windows C:\\Program Files(x86)\\TIDAL\\Agent\\TIDAL_AGENT_1 For Unix (Linux, z/OS) /opt/TIDAL/Agent/TidalAgent1 For OVMS sys$sysdevice:[tidal.agent.tidalagent1] This file should have limited access using native system access control definitions. About the Masters.cfg file The Masters.cfg file uses the following structure: [INCLUDE/EXCLUDE] TA Master alias entry TA Master alias entry where: [INCLUDE/EXCLUDE] is an optional statement on the first line of the file that specifies whether to include or exclude connections with the specified TA Master alias entries; INCLUDE: Only the specified TA Masters with optionally specified IP addresses will be connected to by the agent. EXCLUDE: Only the specified TA Masters will be specifically excluded from being connected to by the agent. If omitted, the INCLUDE statement is used. TA Master alias entry is one of the following forms: MasterAlias The MasterAlias typically has the form ES_< hostname-of-master > 1 and is case-insensitive. If specified alone on the line, only the _MasterAlias will be verified that it matches what was presented by the TA Master in its registration message. MasterAlias : IPaddress1 For local connections, where the TA Master host machine IP addresses are directly accessible by the agent, you need specify only IPaddress1 . This address will be verified against the IP address presented by the TA Master in its registration message and the IP address obtained from the network as the origination of the connection that provided the registration message. MasterAlias : IPaddress1 ; IPaddress2 For connections that must traverse a firewall, you must specify a second IP address. IPaddress2 will be the externally known address of the firewall. The externally known address of the firewall is what will be obtained by the agent when it retrieves the IP address of the origination of the connection through which the registration message was delivered. For situations where a TA Master could have multiple IPs, Failover scenarios, or disaster recovery situations, the same MasterAlias can be specified with different IPaddress parameters, similar to the following: INCLUDE hou-testvm-531:192.168.48.111;172.19.25.125 hou-testvm-531:192.168.55.211;172.19.25.125 zostest:192.168.95.92 zostest:192.168.42.92 catest Agent connection protocol The following describes the normal connection sequence for an agent to TA Master connection to be established: The TA Master connects to the agent\u2019s well-known port (default 5912, configurable). The TA Master sends a registration message to the agent specifying the TA Master\u2019s IP address and listening port (and some other configuration information). This connection is then terminated. For each TA Master that has registered as above, the agent will attempt to connect using the information from the registration. This will happen each time the connection is lost for any reason. The agent will attempt to connect to the IP and port provided by the TA Master in the registration message. If this fails, the agent will attempt to connect to the IP obtained from the network as the source IP (might be firewall IP) and the port provided in the registration message. When the connection is made, the agent will generate an encryption key based on a random seed. This encryption key and other configuration information about the agent will be sent to the TA Master. The encryption key is 'wrapped' by a method that the TA Master knows how to 'unwrap' in order to get the raw key. This key is used to encrypt the body of all future messages (encryption is a configurable option that is on by default).","title":"Securing agent and TA Master connections"},{"location":"secure-agents/#securing-agent-and-ta-master-connections","text":"Each agent includes a Masters.cfg file that lets you strictly control which Tidal Automation Master instances can connect to it. You can uniquely identify the specific TA Masters to which a TA agent will create connections by specifying any of the following: TA Master alias TA Master alias and a specific local TCP/IP address TA Master alias, the specific local TCP/IP address, and a global TCP/IP address The Masters.cfg file must be created in the agent\u2019s local directory. This directory is in the install path of the agent and has the name of the agent as it was specified when the agent was defined, similar to the following default locations: For 32-bit Windows C:\\Program Files\\TIDAL\\Agent\\TIDAL_AGENT_1 For 64-bit Windows C:\\Program Files(x86)\\TIDAL\\Agent\\TIDAL_AGENT_1 For Unix (Linux, z/OS) /opt/TIDAL/Agent/TidalAgent1 For OVMS sys$sysdevice:[tidal.agent.tidalagent1] This file should have limited access using native system access control definitions.","title":"Securing agent and TA Master connections"},{"location":"secure-agents/#about-the-masterscfg-file","text":"The Masters.cfg file uses the following structure: [INCLUDE/EXCLUDE] TA Master alias entry TA Master alias entry where: [INCLUDE/EXCLUDE] is an optional statement on the first line of the file that specifies whether to include or exclude connections with the specified TA Master alias entries; INCLUDE: Only the specified TA Masters with optionally specified IP addresses will be connected to by the agent. EXCLUDE: Only the specified TA Masters will be specifically excluded from being connected to by the agent. If omitted, the INCLUDE statement is used. TA Master alias entry is one of the following forms: MasterAlias The MasterAlias typically has the form ES_< hostname-of-master > 1 and is case-insensitive. If specified alone on the line, only the _MasterAlias will be verified that it matches what was presented by the TA Master in its registration message. MasterAlias : IPaddress1 For local connections, where the TA Master host machine IP addresses are directly accessible by the agent, you need specify only IPaddress1 . This address will be verified against the IP address presented by the TA Master in its registration message and the IP address obtained from the network as the origination of the connection that provided the registration message. MasterAlias : IPaddress1 ; IPaddress2 For connections that must traverse a firewall, you must specify a second IP address. IPaddress2 will be the externally known address of the firewall. The externally known address of the firewall is what will be obtained by the agent when it retrieves the IP address of the origination of the connection through which the registration message was delivered. For situations where a TA Master could have multiple IPs, Failover scenarios, or disaster recovery situations, the same MasterAlias can be specified with different IPaddress parameters, similar to the following: INCLUDE hou-testvm-531:192.168.48.111;172.19.25.125 hou-testvm-531:192.168.55.211;172.19.25.125 zostest:192.168.95.92 zostest:192.168.42.92 catest","title":"About the Masters.cfg file"},{"location":"secure-agents/#agent-connection-protocol","text":"The following describes the normal connection sequence for an agent to TA Master connection to be established: The TA Master connects to the agent\u2019s well-known port (default 5912, configurable). The TA Master sends a registration message to the agent specifying the TA Master\u2019s IP address and listening port (and some other configuration information). This connection is then terminated. For each TA Master that has registered as above, the agent will attempt to connect using the information from the registration. This will happen each time the connection is lost for any reason. The agent will attempt to connect to the IP and port provided by the TA Master in the registration message. If this fails, the agent will attempt to connect to the IP obtained from the network as the source IP (might be firewall IP) and the port provided in the registration message. When the connection is made, the agent will generate an encryption key based on a random seed. This encryption key and other configuration information about the agent will be sent to the TA Master. The encryption key is 'wrapped' by a method that the TA Master knows how to 'unwrap' in order to get the raw key. This key is used to encrypt the body of all future messages (encryption is a configurable option that is on by default).","title":"Agent connection protocol"},{"location":"ta-agent-define/","text":"Defining agent connections To define a connection between the agent and the TA Master: From the Navigator panel of the TA client, choose Administration > Connections . From the Connections panel, do either of the following: Select the Add button on the TA toolbar. Right-click in the Connections panel and choose Add Connection , then choose the Agent for Windows or Agent for Unix option from the menu. From the Connection Definition dialog box, specify a name for the agent you installed. Note This name does not have to match the machine name or instance name. On the General tab, configure: Job Limit : Maximum number of jobs you want to run concurrently on this agent. Tidal recommends that you do not run more than 80 jobs at once. Default Runtime User : Default runtime user that will appear when creating a new job on this agent. Select the Enabled option. On the Connection tab, configure: Machine Name : Name or IP address of the machine on which the agent is installed. This name must be a valid DNS name. Master-to-Agent Communication Port : Agent\u2019s listener port number specified when installing the agent. If you want to enter a description of this agent, select the Description tab and enter a description; otherwise, select OK to save the connection.","title":"Defining agent connections"},{"location":"ta-agent-define/#defining-agent-connections","text":"To define a connection between the agent and the TA Master: From the Navigator panel of the TA client, choose Administration > Connections . From the Connections panel, do either of the following: Select the Add button on the TA toolbar. Right-click in the Connections panel and choose Add Connection , then choose the Agent for Windows or Agent for Unix option from the menu. From the Connection Definition dialog box, specify a name for the agent you installed. Note This name does not have to match the machine name or instance name. On the General tab, configure: Job Limit : Maximum number of jobs you want to run concurrently on this agent. Tidal recommends that you do not run more than 80 jobs at once. Default Runtime User : Default runtime user that will appear when creating a new job on this agent. Select the Enabled option. On the Connection tab, configure: Machine Name : Name or IP address of the machine on which the agent is installed. This name must be a valid DNS name. Master-to-Agent Communication Port : Agent\u2019s listener port number specified when installing the agent. If you want to enter a description of this agent, select the Description tab and enter a description; otherwise, select OK to save the connection.","title":"Defining agent connections"},{"location":"ta-agent-delete/","text":"Deleting an agent connection To delete an agent connection: From the Connections panel, select the agent to delete. Select the Delete button on the TA toolbar or press the Delete key on your keyboard. Note You cannot delete an agent connection unless you are connected to the TA Master. You can delete an agent connection that is currently in use; however, jobs that were to run on that agent will be disabled. Those jobs will not run again until you assign them to a valid new agent.","title":"Deleting agent connections"},{"location":"ta-agent-delete/#deleting-an-agent-connection","text":"To delete an agent connection: From the Connections panel, select the agent to delete. Select the Delete button on the TA toolbar or press the Delete key on your keyboard. Note You cannot delete an agent connection unless you are connected to the TA Master. You can delete an agent connection that is currently in use; however, jobs that were to run on that agent will be disabled. Those jobs will not run again until you assign them to a valid new agent.","title":"Deleting an agent connection"},{"location":"ta-agent-enable/","text":"Enabling and disabling agents You can disable an agent if you do not want it to run jobs. If a job is about to be submitted to run on a disabled agent, its status changes to Agent Disabled . To enable or disable an agent: From the Navigator panel, choose Administration > Connections to display the Connections panel. Do either of the following: Double-click the agent. Select the agent and select the Edit button on the TA toolbar. In the agent's Connection Definition dialog box: To enable the agent, select the Enabled option. To disable the agent, clear the Enabled option. Note You can also enable or disable agents using the context menu in the Connections panel. Select OK .","title":"Enabling and disabling agent connections"},{"location":"ta-agent-enable/#enabling-and-disabling-agents","text":"You can disable an agent if you do not want it to run jobs. If a job is about to be submitted to run on a disabled agent, its status changes to Agent Disabled . To enable or disable an agent: From the Navigator panel, choose Administration > Connections to display the Connections panel. Do either of the following: Double-click the agent. Select the agent and select the Edit button on the TA toolbar. In the agent's Connection Definition dialog box: To enable the agent, select the Enabled option. To disable the agent, clear the Enabled option. Note You can also enable or disable agents using the context menu in the Connections panel. Select OK .","title":"Enabling and disabling agents"},{"location":"ta-agent-modify/","text":"Modifying agent connections You can modify information about an agent connection using the following procedures: Changing an agent\u2019s job limit Changing the name of the computer displayed in TA Changing the machine hostname of the computer Changing an agent\u2019s job limit You can change an agent\u2019s job limit to specify the number of jobs that can run on it concurrently. You can also control the number of jobs running concurrently using queues. To change an agents job limit: From the Navigator panel, choose Administration > Connections to display the Connections panel with the licensed computers. Double-click the agent, or select the agent and select Edit on the TA toolbar, to display the agent\u2019s connection definition. Select the General tab if it is not showing. In the Job Limi t field on the General tab, change the job limit to the desired value. Select OK . Changing the name of the computer displayed in TA To change the name of the computer: From the Connections panel, double-click the licensed computer, or select the computer and select Edit , to display the licensed computer\u2019s Connection Definition dialog box In the Name field, change the computer\u2019s name. This name is used when referring to the computer on TA panes and dialog boxes. Select OK . Changing the machine hostname of the computer To change the hostname of the computer: From the Connections panel, double-click the licensed computer to edit, or select the computer and select Edit , to display the licensed computer\u2019s Connection Definition dialog box. Select the Connection tab. In the Machine Name field, update the computer\u2019s name. This name can be found in the DNS section of the TCP/IP protocol of your network configuration. Contact your System Administrator for more information.","title":"Modifying agent connections"},{"location":"ta-agent-modify/#modifying-agent-connections","text":"You can modify information about an agent connection using the following procedures: Changing an agent\u2019s job limit Changing the name of the computer displayed in TA Changing the machine hostname of the computer","title":"Modifying agent connections"},{"location":"ta-agent-modify/#changing-an-agents-job-limit","text":"You can change an agent\u2019s job limit to specify the number of jobs that can run on it concurrently. You can also control the number of jobs running concurrently using queues. To change an agents job limit: From the Navigator panel, choose Administration > Connections to display the Connections panel with the licensed computers. Double-click the agent, or select the agent and select Edit on the TA toolbar, to display the agent\u2019s connection definition. Select the General tab if it is not showing. In the Job Limi t field on the General tab, change the job limit to the desired value. Select OK .","title":"Changing an agent\u2019s job limit"},{"location":"ta-agent-modify/#changing-the-name-of-the-computer-displayed-in-ta","text":"To change the name of the computer: From the Connections panel, double-click the licensed computer, or select the computer and select Edit , to display the licensed computer\u2019s Connection Definition dialog box In the Name field, change the computer\u2019s name. This name is used when referring to the computer on TA panes and dialog boxes. Select OK .","title":"Changing the name of the computer displayed in TA"},{"location":"ta-agent-modify/#changing-the-machine-hostname-of-the-computer","text":"To change the hostname of the computer: From the Connections panel, double-click the licensed computer to edit, or select the computer and select Edit , to display the licensed computer\u2019s Connection Definition dialog box. Select the Connection tab. In the Machine Name field, update the computer\u2019s name. This name can be found in the DNS section of the TCP/IP protocol of your network configuration. Contact your System Administrator for more information.","title":"Changing the machine hostname of the computer"},{"location":"ta-agent-timezones/","text":"Modifying agent time zones You can assign a time zone for agent and adapter connection. By using this new time zone assignment, the TA Master can accurately calculate the time difference between the TA Master instance and the agent without relying on the agent. For example, if the agent time zone is set in Central European Time (CET) and the master time zone is set in Pacific Standard Time (PST), the TA Master would accurately calculate the time difference between the TA Master and the agent. This calculation is further used to adjust the job launch time during Daylight Saving Time (DST). Defining an agent time zone To define an agent time zone: Select Activities > System Configuration to open the System Configuration dialog box. Navigate to the Timezone tab. The existing TA Master time zones are displayed. From the Job Time Zones section, select Use Agent Time Zone . Select Add to open the Time Zone for Job Definition dialog box. In the Name field, enter a unique name to represent job timezone. From the Timezone list, select the timezone ID. The following fields are pre-populate depending on the Timezone list selection: Timezone Full Name : Java built-in timezone long name. Master Timezone Offset : Differences between the TA Master timezone and selected timezone. UTC/GMT Timezone Offset : Difference between standard UTC/GMT and the selected timezone. Current in DST Timezone Period : Whether the selected timezone is currently in the Daylight Saving Time (DST) period. DST Time Differences : Amount of time to be added to selected timezone if it is in DST period. Select OK . The new timezone is added to the existing list. From the Navigation panel, select Administration > Connections to display the Connection Definition dialog box. In the Scheduling Time Zone list field, select the time zone created in the system configuration. This time zone will be used by the agent to trigger the job. Note When the Use Master Time Zone option is selected in the System Configuration dialog box, the Scheduling Time Zone list is disabled in the Connection Definition dialog box. Navigate to Administration > Connections to display the Connections panel. The new agent connection is displayed along with the Scheduling Time Zone field. Note If you change the Scheduling Time Zone at the connection level, you must recompile the associated agent and adapter jobs before the new timezone takes effect. Changing the timezone is not supported for agents that are in agent lists. Applying agent time zone functionality The following steps are required for users planning to apply this functionality: If you are upgrading to the version with this feature, then first configure the time zone they are scheduling for and then configure the agent connection for them. Upgrades should be done when the master and the configured time zone are at least +/- 48 hours from the DST day. Also, recompile future days that are greater than tomorrow.","title":"Managing agent time zones"},{"location":"ta-agent-timezones/#modifying-agent-time-zones","text":"You can assign a time zone for agent and adapter connection. By using this new time zone assignment, the TA Master can accurately calculate the time difference between the TA Master instance and the agent without relying on the agent. For example, if the agent time zone is set in Central European Time (CET) and the master time zone is set in Pacific Standard Time (PST), the TA Master would accurately calculate the time difference between the TA Master and the agent. This calculation is further used to adjust the job launch time during Daylight Saving Time (DST).","title":"Modifying agent time zones"},{"location":"ta-agent-timezones/#defining-an-agent-time-zone","text":"To define an agent time zone: Select Activities > System Configuration to open the System Configuration dialog box. Navigate to the Timezone tab. The existing TA Master time zones are displayed. From the Job Time Zones section, select Use Agent Time Zone . Select Add to open the Time Zone for Job Definition dialog box. In the Name field, enter a unique name to represent job timezone. From the Timezone list, select the timezone ID. The following fields are pre-populate depending on the Timezone list selection: Timezone Full Name : Java built-in timezone long name. Master Timezone Offset : Differences between the TA Master timezone and selected timezone. UTC/GMT Timezone Offset : Difference between standard UTC/GMT and the selected timezone. Current in DST Timezone Period : Whether the selected timezone is currently in the Daylight Saving Time (DST) period. DST Time Differences : Amount of time to be added to selected timezone if it is in DST period. Select OK . The new timezone is added to the existing list. From the Navigation panel, select Administration > Connections to display the Connection Definition dialog box. In the Scheduling Time Zone list field, select the time zone created in the system configuration. This time zone will be used by the agent to trigger the job. Note When the Use Master Time Zone option is selected in the System Configuration dialog box, the Scheduling Time Zone list is disabled in the Connection Definition dialog box. Navigate to Administration > Connections to display the Connections panel. The new agent connection is displayed along with the Scheduling Time Zone field. Note If you change the Scheduling Time Zone at the connection level, you must recompile the associated agent and adapter jobs before the new timezone takes effect. Changing the timezone is not supported for agents that are in agent lists.","title":"Defining an agent time zone"},{"location":"ta-agent-timezones/#applying-agent-time-zone-functionality","text":"The following steps are required for users planning to apply this functionality: If you are upgrading to the version with this feature, then first configure the time zone they are scheduling for and then configure the agent connection for them. Upgrades should be done when the master and the configured time zone are at least +/- 48 hours from the DST day. Also, recompile future days that are greater than tomorrow.","title":"Applying agent time zone functionality"},{"location":"ta-agents-overview/","text":"Managing agents in Tidal Automation The procedures described in this section are performed in the TA Console. You can start and stop agents, check agent status, change an agent\u2019s job limit and perform other agent-related tasks in your network at any time as described in this section. Note For Windows agents, before starting or stopping the agent, check the agent\u2019s status using the TA Service Manager.","title":"Overview"},{"location":"ta-agents-overview/#managing-agents-in-tidal-automation","text":"The procedures described in this section are performed in the TA Console. You can start and stop agents, check agent status, change an agent\u2019s job limit and perform other agent-related tasks in your network at any time as described in this section. Note For Windows agents, before starting or stopping the agent, check the agent\u2019s status using the TA Service Manager.","title":"Managing agents in Tidal Automation"},{"location":"ta-associate-users/","text":"Associating agents with users and groups Intro Adding users to an agent TBD Adding groups to an agent TBD","title":"Associating agents with users and groups"},{"location":"ta-associate-users/#associating-agents-with-users-and-groups","text":"Intro","title":"Associating agents with users and groups"},{"location":"ta-associate-users/#adding-users-to-an-agent","text":"TBD","title":"Adding users to an agent"},{"location":"ta-associate-users/#adding-groups-to-an-agent","text":"TBD","title":"Adding groups to an agent"},{"location":"ta-create-connections/","text":"Creating agent connections The procedures described in this section are performed in the TA Console. You can start and stop agents, check agent status, change an agent\u2019s job limit and perform other agent-related tasks in your network at any time as described in this section. Note For Windows agents, before starting or stopping the agent, check the agent\u2019s status using the TA Service Manager. Defining an agent connection To define a connection between the agent and the Master: TBD Deleting an agent connection To delete an agent connection: From the Connections pane, select the agent to delete. Select the Delete button on the TA toolbar or press the Delete key on your keyboard. Note You cannot delete an agent connection unless you are connected to the Master. You can delete an agent connection that is currently in use, however, jobs that were to run on that agent will be disabled. Those jobs will not run again until you assign them to a valid new agent. Modifying agent connections TBD Changing an agent's job limit You can change an agent\u2019s job limit to specify the number of jobs that can run on it concurrently. You can also control the number of jobs running concurrently using queues. To change an agents job limit: From the Navigator pane, choose Administration > Connections to display the Connections pane with the licensed computers. Double-click the agent to edit or select the agent and select the Edit button on the TA toolbar to display the agent\u2019s connection definition. Select the General tab if it is not showing. In the Job Limit field on the General tab, change the job limit to the desired value. Select OK . Changing the name of the computer displayed in TA TBD Changing the machine hostname of the computer TBD Managing agent time zones You can assign a time zone for agent and adapter connection. By using this new time zone assignment, the master can accurately calculate the time difference between the master and agent without relying on the agent. For example, if the agent time zone is set in Central European Time (CET) and if the master time zone is set in Pacific Standard Time (PST), then the master would accurately calculate the time difference between the master and the agent. This calculation is further used to adjust the job launch time during Daylight saving Time (DST). Defining the time zone of an agent TBD Applying agent time zone functionality TBD Enabling and disabling agents TBD","title":"Creating agent connections"},{"location":"ta-create-connections/#creating-agent-connections","text":"The procedures described in this section are performed in the TA Console. You can start and stop agents, check agent status, change an agent\u2019s job limit and perform other agent-related tasks in your network at any time as described in this section. Note For Windows agents, before starting or stopping the agent, check the agent\u2019s status using the TA Service Manager.","title":"Creating agent connections"},{"location":"ta-create-connections/#defining-an-agent-connection","text":"To define a connection between the agent and the Master: TBD","title":"Defining an agent connection"},{"location":"ta-create-connections/#deleting-an-agent-connection","text":"To delete an agent connection: From the Connections pane, select the agent to delete. Select the Delete button on the TA toolbar or press the Delete key on your keyboard. Note You cannot delete an agent connection unless you are connected to the Master. You can delete an agent connection that is currently in use, however, jobs that were to run on that agent will be disabled. Those jobs will not run again until you assign them to a valid new agent.","title":"Deleting an agent connection"},{"location":"ta-create-connections/#modifying-agent-connections","text":"TBD","title":"Modifying agent connections"},{"location":"ta-create-connections/#changing-an-agents-job-limit","text":"You can change an agent\u2019s job limit to specify the number of jobs that can run on it concurrently. You can also control the number of jobs running concurrently using queues. To change an agents job limit: From the Navigator pane, choose Administration > Connections to display the Connections pane with the licensed computers. Double-click the agent to edit or select the agent and select the Edit button on the TA toolbar to display the agent\u2019s connection definition. Select the General tab if it is not showing. In the Job Limit field on the General tab, change the job limit to the desired value. Select OK .","title":"Changing an agent's job limit"},{"location":"ta-create-connections/#changing-the-name-of-the-computer-displayed-in-ta","text":"TBD","title":"Changing the name of the computer displayed in TA"},{"location":"ta-create-connections/#changing-the-machine-hostname-of-the-computer","text":"TBD","title":"Changing the machine hostname of the computer"},{"location":"ta-create-connections/#managing-agent-time-zones","text":"You can assign a time zone for agent and adapter connection. By using this new time zone assignment, the master can accurately calculate the time difference between the master and agent without relying on the agent. For example, if the agent time zone is set in Central European Time (CET) and if the master time zone is set in Pacific Standard Time (PST), then the master would accurately calculate the time difference between the master and the agent. This calculation is further used to adjust the job launch time during Daylight saving Time (DST).","title":"Managing agent time zones"},{"location":"ta-create-connections/#defining-the-time-zone-of-an-agent","text":"TBD","title":"Defining the time zone of an agent"},{"location":"ta-create-connections/#applying-agent-time-zone-functionality","text":"TBD","title":"Applying agent time zone functionality"},{"location":"ta-create-connections/#enabling-and-disabling-agents","text":"TBD","title":"Enabling and disabling agents"},{"location":"ta-modify-connections/","text":"Modifying agent connections TBD Changing an agent's job limit You can change an agent\u2019s job limit to specify the number of jobs that can run on it concurrently. You can also control the number of jobs running concurrently using queues. To change an agents job limit: From the Navigator pane, choose Administration > Connections to display the Connections pane with the licensed computers. Double-click the agent to edit or select the agent and select the Edit button on the TA toolbar to display the agent\u2019s connection definition. Select the General tab if it is not showing. In the Job Limit field on the General tab, change the job limit to the desired value. Select OK . Changing the name of the computer displayed in TA TBD Changing the machine hostname of the computer TBD","title":"Modifying agent connections"},{"location":"ta-modify-connections/#modifying-agent-connections","text":"TBD","title":"Modifying agent connections"},{"location":"ta-modify-connections/#changing-an-agents-job-limit","text":"You can change an agent\u2019s job limit to specify the number of jobs that can run on it concurrently. You can also control the number of jobs running concurrently using queues. To change an agents job limit: From the Navigator pane, choose Administration > Connections to display the Connections pane with the licensed computers. Double-click the agent to edit or select the agent and select the Edit button on the TA toolbar to display the agent\u2019s connection definition. Select the General tab if it is not showing. In the Job Limit field on the General tab, change the job limit to the desired value. Select OK .","title":"Changing an agent's job limit"},{"location":"ta-modify-connections/#changing-the-name-of-the-computer-displayed-in-ta","text":"TBD","title":"Changing the name of the computer displayed in TA"},{"location":"ta-modify-connections/#changing-the-machine-hostname-of-the-computer","text":"TBD","title":"Changing the machine hostname of the computer"},{"location":"trb-java/","text":"Troubleshooting Java-based agents This section provide troubleshooting help for Java-based agents. Proper configuration of Java-based agents The first line of every Unix agent shell script must adhere to standard Unix scripting guidelines and refer to a shell; for example, #!/bin/sh . For more information, refer to your Unix system documentation or consult your System Administrator. Diagnostics for a Java-based agent When a Java-based agent generates errors and doesn\u2019t operate properly, you need to contact the Tidal Support Center to help you resolve the technical issues. However, the Tidal Support Center requires specific information on how the Java-based agent is operating before they can track down the source of the problem. Before contacting the Tidal Support Center about an agent issue, you should enable the following logging settings to collect information about the way the agent is functioning. ovb=Tidaldebug to save diagnostic information to the log files debug=y to save startup information to the files The Tidal Support Center will ask you to set these values, if you have not done so before contacting them. To turn on diagnostic logging: On the agent machine type the following command to stop the agent: ./tagent <agent-name> stop Go to the /bin directory and locate the tagent.ini file for the desired agent. Inside the tagent.ini file, under the port setting, type the following: ovb=Tidaldebug debug=y Save the file and its changes. Start the agent: ./tagent <agent-name> start Ideally, you want to reproduce the situation that caused the issue so the diagnostics can log what occurred in the system at that time. As soon as the problem reoccurs, contact the Tidal Support Center. Once the problem repeats itself and the diagnostic information is recorded, turn off the agent diagnostics by commenting out the debugging parameter: #ovb=Tidaldebug debug=y Go to the Log directory to get the diagnostic file to send to the Tidal Support Center: cd <agent directory>/<agent-name>/logs Each agent instance has its own directory. The diagnostic files are named <agent-name>.log and <master-server>.log . Restarting the agent does not override the recorded information. Though only a small amount of information is normally recorded without the debug parameter, the file will continue to grow in size. You should delete or rename the file after you finish debugging the agent. Note Whenever diagnostic logging is being used, you must carefully monitor the amount of disk and database space being consumed. Diagnostic logging can generate large amounts of data and affect system performance. Troubleshooting a Java-based agent that fails to start If your Java-based agent fails to start or hangs on the following message, you might not have any logs to troubleshoot: TIDAL Agent for UNIX Starting agent testagent on port 5912 Opening Connection...... Typically, this problem is caused by an IP address mismatch. Follow the procedure below to check the IP address definitions. To troubleshoot a Java-based agent that fails to start or hangs: Check the IP of the agent server and how it is configured. Run ifconfig . Compare the system IP returned from ifconfig to the system's IP defined in the file /etc/hosts . Fix any mismatched IP addresses. Configuring diagnostics for a Java-based agent The first line of every Unix agent shell script must adhere to standard Unix scripting guidelines and refer to a shell; for example, #!/bin/sh . For more information, refer to your Unix system documentation or consult your System Administrator. To turn on diagnostic logging: On the agent machine type the following command to stop the agent: ./tagent <agent name> stop Go to the /bin directory and locate the tagent.ini file for the desired agent. Inside the tagent.ini file, under the port setting, add the following line: ovb=Tidaldebug debug=y Save the file and its changes. Start the agent: ./tagent <agent-name> start Ideally, you want to reproduce the situation that caused the issue so the diagnostics can log what occurred in the system at that time. As soon as the problem reoccurs, contact Tidal Support Center. Once the problem repeats itself and the diagnostic information is recorded, turn off the agent diagnostics by commenting out the debugging parameter: #ovb=Tidaldebug debug=y Go to the Log directory to get the diagnostic file to send to Tidal Support Center: cd <agent directory>/<agent-name>/logs Each agent instance has its own directory. The diagnostic files are named .log, .log and .log. Restarting the agent does not override the recorded information. Though only a small amount of information is normally recorded without the debug parameter, the file will continue to grow in size. You should delete or rename the file after you finish debugging the agent. Attention Whenever diagnostic logging is being used, you must carefully monitor the amount of disk and database space being consumed. Diagnostic logging can generate large amounts of data and affect system performance. Raising the logging levels for Java-based agents To raise the logging level for a Java-based Agent: On the agent machine, go to the agent\u2019s bin directory: cd <agent-home>/bin Open the tagent.ini file and add the following line in the [config] section: [config] ovb=tidaldebug debug=y Restart the agent.","title":"Troubleshooting Java-based agents"},{"location":"trb-java/#troubleshooting-java-based-agents","text":"This section provide troubleshooting help for Java-based agents.","title":"Troubleshooting Java-based agents"},{"location":"trb-java/#proper-configuration-of-java-based-agents","text":"The first line of every Unix agent shell script must adhere to standard Unix scripting guidelines and refer to a shell; for example, #!/bin/sh . For more information, refer to your Unix system documentation or consult your System Administrator.","title":"Proper configuration of Java-based agents"},{"location":"trb-java/#diagnostics-for-a-java-based-agent","text":"When a Java-based agent generates errors and doesn\u2019t operate properly, you need to contact the Tidal Support Center to help you resolve the technical issues. However, the Tidal Support Center requires specific information on how the Java-based agent is operating before they can track down the source of the problem. Before contacting the Tidal Support Center about an agent issue, you should enable the following logging settings to collect information about the way the agent is functioning. ovb=Tidaldebug to save diagnostic information to the log files debug=y to save startup information to the files The Tidal Support Center will ask you to set these values, if you have not done so before contacting them. To turn on diagnostic logging: On the agent machine type the following command to stop the agent: ./tagent <agent-name> stop Go to the /bin directory and locate the tagent.ini file for the desired agent. Inside the tagent.ini file, under the port setting, type the following: ovb=Tidaldebug debug=y Save the file and its changes. Start the agent: ./tagent <agent-name> start Ideally, you want to reproduce the situation that caused the issue so the diagnostics can log what occurred in the system at that time. As soon as the problem reoccurs, contact the Tidal Support Center. Once the problem repeats itself and the diagnostic information is recorded, turn off the agent diagnostics by commenting out the debugging parameter: #ovb=Tidaldebug debug=y Go to the Log directory to get the diagnostic file to send to the Tidal Support Center: cd <agent directory>/<agent-name>/logs Each agent instance has its own directory. The diagnostic files are named <agent-name>.log and <master-server>.log . Restarting the agent does not override the recorded information. Though only a small amount of information is normally recorded without the debug parameter, the file will continue to grow in size. You should delete or rename the file after you finish debugging the agent. Note Whenever diagnostic logging is being used, you must carefully monitor the amount of disk and database space being consumed. Diagnostic logging can generate large amounts of data and affect system performance.","title":"Diagnostics for a Java-based agent"},{"location":"trb-java/#troubleshooting-a-java-based-agent-that-fails-to-start","text":"If your Java-based agent fails to start or hangs on the following message, you might not have any logs to troubleshoot: TIDAL Agent for UNIX Starting agent testagent on port 5912 Opening Connection...... Typically, this problem is caused by an IP address mismatch. Follow the procedure below to check the IP address definitions. To troubleshoot a Java-based agent that fails to start or hangs: Check the IP of the agent server and how it is configured. Run ifconfig . Compare the system IP returned from ifconfig to the system's IP defined in the file /etc/hosts . Fix any mismatched IP addresses.","title":"Troubleshooting a Java-based agent that fails to start"},{"location":"trb-java/#configuring-diagnostics-for-a-java-based-agent","text":"The first line of every Unix agent shell script must adhere to standard Unix scripting guidelines and refer to a shell; for example, #!/bin/sh . For more information, refer to your Unix system documentation or consult your System Administrator. To turn on diagnostic logging: On the agent machine type the following command to stop the agent: ./tagent <agent name> stop Go to the /bin directory and locate the tagent.ini file for the desired agent. Inside the tagent.ini file, under the port setting, add the following line: ovb=Tidaldebug debug=y Save the file and its changes. Start the agent: ./tagent <agent-name> start Ideally, you want to reproduce the situation that caused the issue so the diagnostics can log what occurred in the system at that time. As soon as the problem reoccurs, contact Tidal Support Center. Once the problem repeats itself and the diagnostic information is recorded, turn off the agent diagnostics by commenting out the debugging parameter: #ovb=Tidaldebug debug=y Go to the Log directory to get the diagnostic file to send to Tidal Support Center: cd <agent directory>/<agent-name>/logs Each agent instance has its own directory. The diagnostic files are named .log, .log and .log. Restarting the agent does not override the recorded information. Though only a small amount of information is normally recorded without the debug parameter, the file will continue to grow in size. You should delete or rename the file after you finish debugging the agent. Attention Whenever diagnostic logging is being used, you must carefully monitor the amount of disk and database space being consumed. Diagnostic logging can generate large amounts of data and affect system performance.","title":"Configuring diagnostics for a Java-based agent"},{"location":"trb-java/#raising-the-logging-levels-for-java-based-agents","text":"To raise the logging level for a Java-based Agent: On the agent machine, go to the agent\u2019s bin directory: cd <agent-home>/bin Open the tagent.ini file and add the following line in the [config] section: [config] ovb=tidaldebug debug=y Restart the agent.","title":"Raising the logging levels for Java-based agents"},{"location":"trb-overview/","text":"Troubleshooting When the Agent for Windows or Unix generates errors and doesn\u2019t operate properly, you need to contact Tidal Support Center to help you resolve the technical issues. However, Tidal Support Center requires specific information on how the Agent is operating before they can track down the source of the problem. Before contacting Tidal Support Center about an agent issue, you should verify the agent version and turn on diagnostic logging to collect information about the way the agent is functioning. These are the first steps that Tidal Support Center will have you do, if you have not done it before contacting them.","title":"Troubleshooting overview"},{"location":"trb-overview/#troubleshooting","text":"When the Agent for Windows or Unix generates errors and doesn\u2019t operate properly, you need to contact Tidal Support Center to help you resolve the technical issues. However, Tidal Support Center requires specific information on how the Agent is operating before they can track down the source of the problem. Before contacting Tidal Support Center about an agent issue, you should verify the agent version and turn on diagnostic logging to collect information about the way the agent is functioning. These are the first steps that Tidal Support Center will have you do, if you have not done it before contacting them.","title":"Troubleshooting"},{"location":"trb-tidal/","text":"Troubleshooting agent issues in Tidal Automation This section provides information for troubleshooting agents in theTidal Automation client. Verifying the version of the agent When consulting with Tidal Support Center about a problem with an agent, one of the most basic pieces of information they need is which version of the agent is being used. To verify the version of the agent: From the Navigator panel of the client, choose Administration > Connections to display the Connections panel. In the various connections listed in the panel, locate the agent with the problem. Look in the Version column of that agent to see the version of the agent being used.","title":"Troubleshooting agent issues in Tidal Automation"},{"location":"trb-tidal/#troubleshooting-agent-issues-in-tidal-automation","text":"This section provides information for troubleshooting agents in theTidal Automation client.","title":"Troubleshooting agent issues in Tidal Automation"},{"location":"trb-tidal/#verifying-the-version-of-the-agent","text":"When consulting with Tidal Support Center about a problem with an agent, one of the most basic pieces of information they need is which version of the agent is being used. To verify the version of the agent: From the Navigator panel of the client, choose Administration > Connections to display the Connections panel. In the various connections listed in the panel, locate the agent with the problem. Look in the Version column of that agent to see the version of the agent being used.","title":"Verifying the version of the agent"},{"location":"trb-windows/","text":"Troubleshooting This section provides some troubleshooting help for Windows agents. Proper configuration of Windows agents The Windows agent should have been configured properly at the time of installation but sometimes the configuration is unintentionally changed and causes problems. A Windows agent will not operate correctly unless it is configured as follows: If the agent is configured to run as Windows user, it must be set up as local to the agent server or a domain user. This Windows user must be an administrator on the local machine and have the following four user rights assigned Act as part of the Operating System Logon as a batch Logon as a service Replace a process level token All runtime users must have the Logon as a batch user right on every Windows server on which the runtime user will run jobs. Note If you have to change any of the above, you should restart the server, as Windows does not always make those changes effective without rebooting. In the Client Manager, edit each runtime user (and regular user if those are being used to run jobs) and type the Windows password on the Passwords tab of the user\u2019s definition. If a Windows domain is not specified, a runtime user is assumed to be local to the agent where it is running a job. Also in the Client Manager, from the main menu, select Activities>System Configuration to display the System Configuration dialog box and select the Use Passwords to Run Windows Jobs option. After confirming that the agent service has been configured as recommended, run this test job from a command prompt: C:\\WINNT\\system32\\cmd.exe /c set Look at the output for the Username variable to see if the runtime user's name listed. If that is working, then you should be able to run jobs wherever the Windows Authentication is accepted. Diagnostics for a Windows agent To run diagnostics for a Windows agent: Login to the agent console as the same user that the agent service is configured to run. Create a shortcut by right-clicking the Windows Desktop and selecting New > Shortcut from the context menu to display the Create Shortcut dialog box. In the Type the location of the item field, type the following command path: C:\\Program Files (x86)\\TIDAL\\Agent\\bin\\TidalAgent.exe\" Agent=TidalSAAgent_0 Port=5912 Verbosity=Tidaldebug Debug=Yes Note Your installation path and port number might be different. Using the Service Control Manager, stop the agent. Double-click the agent shortcut you created to start the agent in debug mode. A window named after the agent displays scrolling messages as the agent does its work. The same data displayed in the window is also logged to the Application Log of the Windows Event Viewer. The system must remain logged on and the agent must continue to run in this Application Mode to gather diagnostics. It is important to modify the properties for the Application Log so it saves an appropriate amount of data. To modify the properties: In the Event View tree, select the Application Log . Right-click and select the Properties option to display the Application Log Properties dialog box. In the Log size section, adjust the value in the Maximum log size field. The value will vary significantly from agent to agent, depending on the environment and usage. Start with 5-10 megabytes of data and increase as needed. You can configure the Event Viewer to either overwrite the previously written data or stop logging when the log size reaches the maximum size. To stop diagnostics, close the agent application window and restart the agent from the Service Control Manager. Configuring diagnostics for a Windows agent To configure diagnostics for the Windows agent: Log in to the agent console as an authorized user. Using Service Manager, select the Agent that you wish to use diagnose. Add the following string to the end of the Path: field. Debug=high Select OK at bottom of panel and respond yes to the \u201cWould you like to restart the service?\u201d pop-up. To stop diagnostics, close the agent application window and restart the agent from the Service Control Manager. Raising the logging levels for Windows agents To raise the logging level for a Windows Agent: Open the TA Service Manager on the agent machine. Select the agent in the dropdown. Select on the dots [...]. In the Service tab, change the path to include the DEBUG option to read \"DEBUG=HIGH\". Select OK to save changes.","title":"Troubleshooting Windows agents"},{"location":"trb-windows/#troubleshooting","text":"This section provides some troubleshooting help for Windows agents.","title":"Troubleshooting"},{"location":"trb-windows/#proper-configuration-of-windows-agents","text":"The Windows agent should have been configured properly at the time of installation but sometimes the configuration is unintentionally changed and causes problems. A Windows agent will not operate correctly unless it is configured as follows: If the agent is configured to run as Windows user, it must be set up as local to the agent server or a domain user. This Windows user must be an administrator on the local machine and have the following four user rights assigned Act as part of the Operating System Logon as a batch Logon as a service Replace a process level token All runtime users must have the Logon as a batch user right on every Windows server on which the runtime user will run jobs. Note If you have to change any of the above, you should restart the server, as Windows does not always make those changes effective without rebooting. In the Client Manager, edit each runtime user (and regular user if those are being used to run jobs) and type the Windows password on the Passwords tab of the user\u2019s definition. If a Windows domain is not specified, a runtime user is assumed to be local to the agent where it is running a job. Also in the Client Manager, from the main menu, select Activities>System Configuration to display the System Configuration dialog box and select the Use Passwords to Run Windows Jobs option. After confirming that the agent service has been configured as recommended, run this test job from a command prompt: C:\\WINNT\\system32\\cmd.exe /c set Look at the output for the Username variable to see if the runtime user's name listed. If that is working, then you should be able to run jobs wherever the Windows Authentication is accepted.","title":"Proper configuration of Windows agents"},{"location":"trb-windows/#diagnostics-for-a-windows-agent","text":"To run diagnostics for a Windows agent: Login to the agent console as the same user that the agent service is configured to run. Create a shortcut by right-clicking the Windows Desktop and selecting New > Shortcut from the context menu to display the Create Shortcut dialog box. In the Type the location of the item field, type the following command path: C:\\Program Files (x86)\\TIDAL\\Agent\\bin\\TidalAgent.exe\" Agent=TidalSAAgent_0 Port=5912 Verbosity=Tidaldebug Debug=Yes Note Your installation path and port number might be different. Using the Service Control Manager, stop the agent. Double-click the agent shortcut you created to start the agent in debug mode. A window named after the agent displays scrolling messages as the agent does its work. The same data displayed in the window is also logged to the Application Log of the Windows Event Viewer. The system must remain logged on and the agent must continue to run in this Application Mode to gather diagnostics. It is important to modify the properties for the Application Log so it saves an appropriate amount of data. To modify the properties: In the Event View tree, select the Application Log . Right-click and select the Properties option to display the Application Log Properties dialog box. In the Log size section, adjust the value in the Maximum log size field. The value will vary significantly from agent to agent, depending on the environment and usage. Start with 5-10 megabytes of data and increase as needed. You can configure the Event Viewer to either overwrite the previously written data or stop logging when the log size reaches the maximum size. To stop diagnostics, close the agent application window and restart the agent from the Service Control Manager.","title":"Diagnostics for a Windows agent"},{"location":"trb-windows/#configuring-diagnostics-for-a-windows-agent","text":"To configure diagnostics for the Windows agent: Log in to the agent console as an authorized user. Using Service Manager, select the Agent that you wish to use diagnose. Add the following string to the end of the Path: field. Debug=high Select OK at bottom of panel and respond yes to the \u201cWould you like to restart the service?\u201d pop-up. To stop diagnostics, close the agent application window and restart the agent from the Service Control Manager.","title":"Configuring diagnostics for a Windows agent"},{"location":"trb-windows/#raising-the-logging-levels-for-windows-agents","text":"To raise the logging level for a Windows Agent: Open the TA Service Manager on the agent machine. Select the agent in the dropdown. Select on the dots [...]. In the Service tab, change the path to include the DEBUG option to read \"DEBUG=HIGH\". Select OK to save changes.","title":"Raising the logging levels for Windows agents"},{"location":"windows-cluster/","text":"Configuring a cluster to run a Windows agent A Windows agent can run in a Windows cluster environment. A cluster environment is defined as multiple machines working together as one system. The cluster environment provides a level of redundancy that allows other machines to take over when one of the machines in the cluster fails. The following instructions describe how to configure a two-node cluster environment to run the Windows agent offered by TA. Prerequisites Before installing the agent for Windows on the nodes of a cluster, you must first complete and/or verify the following on each node: Verify that the systems on each node are identical Verify that the agent machines in each node meet the hardware and software requirements specified in the Tidal Automation Compatibility Matrix . Verify that the user installing the Windows agent has the specified user rights, including access to the registry on each machine. Verify that the cluster group has the following resouce types: Network name IP address Physical disk Configuring the Windows agent for a cluster During configuration, you should complete each step on all machines in the cluster before proceeding to the next step in the procedure, rather than completing all steps on one machine before moving to the next machine. An agent instance must exist on every node in the cluster before it can be configured to run as a cluster. If, for example, you add a third agent instance to one machine in the cluster, you must add a third instance to all other machines in the cluster before configuring the new instance on the first machine. To configure the agents: Verify that the cluster works correctly. Check that the cluster software is installed and configured correctly by forcing a failure on a server. Be sure that a failover to another server occurs as intended and that control can be returned to the server that failed. Your Windows Cluster Administrator should help you with this. Install the agent for Windows on the first cluster node. Be sure to install the agent to a non-clustered physical disk on the local machine using the default directory path specified during installation. Caution : You must install the agent on the same disk drive letter on each cluster node. For example, if you install the agent on the C drive of one node, you must also install the agent on the C drive of the other nodes. Stop the agent if it is running. Attention If an agent instance is configured as part of a cluster, you will not be able to stop the agent. You must stop the agent service. If you are adding an agent instance, add the agent instance to all machines in the cluster (see Installing Windows agents ). An agent instance must exist on every node in the cluster before it can be configured to run as a cluster. After install the agent instance on each of the nodes in the cluster, you can edit the agent instance to configure it for the cluster. From the Windows Start menu, choose Programs > Tidal Automation > Agent > Instance Manager to display the Agent Instance Manager. Select the first agent instance; then select the Edit button to display the Agent Instance Manager\u2019s configuration. If this agent instance is on a node that is configured for a cluster with an existing agent service, the Run on a cluster group option is available. If the node is not part of a cluster, this option is unavailable. You cannot proceed any further without verifying with your Windows Cluster Administrator that the node is correctly configured as a member of the cluster. Select the Run on a cluster group option to display the cluster configuration fields. In the Cluster Group field, select the cluster group to which this agent instance belongs. In the Physical Disk field, select the disk where the agent instance resides. All the disks that were created on all of the cluster groups are listed. Be sure to select a disk that exists on the cluster group you selected. In the Work Directory field, enter the pathname to the work directory that was created for the cluster group. Attention This work directory must exist on a shared disk that moves with the active node on a fail-over. In the Cluster Nodes field, select the node used by this agent instance. When the fields are completed, select Save . Repeat this procedure for each agent instance. When each agent instance on each node is configured properly, start each clustered agent instance from its active node using the TA Service Control Manager. Starting the agent instance in the Service Control Manager automatically starts the agent resource in the Windows Cluster Administrator.","title":"Configuring a cluster to run a Windows agent"},{"location":"windows-cluster/#configuring-a-cluster-to-run-a-windows-agent","text":"A Windows agent can run in a Windows cluster environment. A cluster environment is defined as multiple machines working together as one system. The cluster environment provides a level of redundancy that allows other machines to take over when one of the machines in the cluster fails. The following instructions describe how to configure a two-node cluster environment to run the Windows agent offered by TA.","title":"Configuring a cluster to run a Windows agent"},{"location":"windows-cluster/#prerequisites","text":"Before installing the agent for Windows on the nodes of a cluster, you must first complete and/or verify the following on each node: Verify that the systems on each node are identical Verify that the agent machines in each node meet the hardware and software requirements specified in the Tidal Automation Compatibility Matrix . Verify that the user installing the Windows agent has the specified user rights, including access to the registry on each machine. Verify that the cluster group has the following resouce types: Network name IP address Physical disk","title":"Prerequisites"},{"location":"windows-cluster/#configuring-the-windows-agent-for-a-cluster","text":"During configuration, you should complete each step on all machines in the cluster before proceeding to the next step in the procedure, rather than completing all steps on one machine before moving to the next machine. An agent instance must exist on every node in the cluster before it can be configured to run as a cluster. If, for example, you add a third agent instance to one machine in the cluster, you must add a third instance to all other machines in the cluster before configuring the new instance on the first machine. To configure the agents: Verify that the cluster works correctly. Check that the cluster software is installed and configured correctly by forcing a failure on a server. Be sure that a failover to another server occurs as intended and that control can be returned to the server that failed. Your Windows Cluster Administrator should help you with this. Install the agent for Windows on the first cluster node. Be sure to install the agent to a non-clustered physical disk on the local machine using the default directory path specified during installation. Caution : You must install the agent on the same disk drive letter on each cluster node. For example, if you install the agent on the C drive of one node, you must also install the agent on the C drive of the other nodes. Stop the agent if it is running. Attention If an agent instance is configured as part of a cluster, you will not be able to stop the agent. You must stop the agent service. If you are adding an agent instance, add the agent instance to all machines in the cluster (see Installing Windows agents ). An agent instance must exist on every node in the cluster before it can be configured to run as a cluster. After install the agent instance on each of the nodes in the cluster, you can edit the agent instance to configure it for the cluster. From the Windows Start menu, choose Programs > Tidal Automation > Agent > Instance Manager to display the Agent Instance Manager. Select the first agent instance; then select the Edit button to display the Agent Instance Manager\u2019s configuration. If this agent instance is on a node that is configured for a cluster with an existing agent service, the Run on a cluster group option is available. If the node is not part of a cluster, this option is unavailable. You cannot proceed any further without verifying with your Windows Cluster Administrator that the node is correctly configured as a member of the cluster. Select the Run on a cluster group option to display the cluster configuration fields. In the Cluster Group field, select the cluster group to which this agent instance belongs. In the Physical Disk field, select the disk where the agent instance resides. All the disks that were created on all of the cluster groups are listed. Be sure to select a disk that exists on the cluster group you selected. In the Work Directory field, enter the pathname to the work directory that was created for the cluster group. Attention This work directory must exist on a shared disk that moves with the active node on a fail-over. In the Cluster Nodes field, select the node used by this agent instance. When the fields are completed, select Save . Repeat this procedure for each agent instance. When each agent instance on each node is configured properly, start each clustered agent instance from its active node using the TA Service Control Manager. Starting the agent instance in the Service Control Manager automatically starts the agent resource in the Windows Cluster Administrator.","title":"Configuring the Windows agent for a cluster"},{"location":"windows-config/","text":"Configuring Windows agent instances You can use the Agent Assistance Manager to configure an agent instance by: Adding an agent instance Modifying an agent instance Deleting an agent instance Configuring Windows Services for an agent Configuring agent parameters Adding agent instances To add an instance: From the Windows Start menu, choose Programs > Tidal Automation > Agent > Instance Manager , right click on the Instance Manager and choose \u201cRun as Administrator\u201d to display the Instance Manager. Click Add . The following dialog box displays. Enter the following: Service Name : Name of the agent service. The name in this field is automatically generated and cannot be edited. Display Name : Name of the agent to add. The name in this text field is automatically generated as a possible candidate for the name of your agent. You can keep or change the name. Port : Port number the agent uses to listen for Master connections. By default, the TIDAL_AGENT_1 port is 5912. When you add additional agents, the port increments by 1 by default. Run on a cluster group : Whether this agent instance is on a node that is configured for a cluster with an existing agent service. If the node is not part of a cluster, this option is unavailable. For more information, see Configuring the Windows Agent for a Cluster . Click Save . Note To connect to the agent you just added, see Defining an Agent Connection . Modifying an agent instance You can modify the port number and the name of the instance that is displayed but the service name cannot be changed. Note The Edit button is unavailable as long as the agent is running. To edit an agent instance: Stop the agent. From the Windows Start menu, choose All Programs > Tidal Automation > TA Service Manager to display the TA Service Manager. From the Services list, choose TIDAL_AGENT_<#> . Click Stop . From the Windows Start menu, choose Programs > Tidal Automation > Agent > Instance Manager , right click on the Instance Manager and choose \u201cRun as Administrator\u201d to display the Instance Manager. Select the instance. Click Edit . The Edit dialog box displays. Make the necessary edits, then click Save . The Information dialog box displays. Click OK . Re-start the agent. From the Windows Start menu, choose All Programs > Tidal Automation > TA Service Manager to display the TA Service Manager. From the Services list, choose TIDAL_AGENT_<#> . Click Start . Deleting an agent instance Deleting agent instances does not delete the agent. Even if you delete all of the instances, you must still uninstall the agent program to remove the agent. Note The Delete button is unavailable as long as the agent is running. To delete an instance: Stop the agent. From the Windows Start menu, choose All Programs > Tidal Automation > TA Service Manager to display the TA Service Manager. From the Services list, choose TIDAL_AGENT_<#> . Click Stop . From the Windows Start menu, choose Programs > Tidal Automation > Agent > Instance Manager , right click on the Instance Manager and choose \u201cRun as Administrator\u201d to display the Instance Manager. Select the instance. Click Delete . A confirmation message displays. Click Yes . Attention Tidal recommends that you do not delete the last agent instance called agent_instance_1 . You should instead uninstall the agent program to remove the last agent instance. To delete an agent through the client, see Defining an Agent Connection . Configuring Windows Services for an agent After installing or adding agents, you can configure some Windows settings through the Services window, as documented below, or through the TA Services Manager as discussed in Verifying the Installation . To configure an agent for Windows: From the Windows Start menu, choose Settings > Control Panel. Double-click Administrative Tools . Double-click Services . Double-click the agent you just installed. On the General tab of the AGENT Properties dialog box, select Stop to stop the service. On the Log On tab, select This Account. Enter the requested information in the User Name/Domain Name and Password fields, then select OK . Do either of the following: Right-click the agent and choose Start . On the General tab, click Start to restart the agent. Close the Services and Administrative Tools dialog boxes. Go to the client and follow the Defining an agent connection procedure to re-connect the agent. Configuring agent parameters You can configure the parameters of a Windows agent by adding the parameter statements to the Service Manager agent startup parameters or specifying them in the tagent.ini file. If the default location was used during the agent installation, the agent files are located in C:\\Program Files\\TIDAL\\Agent\\Bin . Supported agent configuration parameters The following table lists the supported configuration parameters. Some parameters can be set only through the Service Manager Service Configuration Parameter field, some can be set only in the tagent.ini file, and others can be set in either manner. The Set in column uses the following notations to indicate where a paramter can be set: INI : Can be set only in the tagent.ini file SCP : Can be set only through the Service Manager SCP/INI : Can be set in either manner Note If you set a parameter in both locations, the value defined through the Service Manager takes precedence. Parameter Set in... Description agent SCP Name of the TA agent agtresource INI Options for monitoring the following agent resources at specified time intervals in milliseconds (default=15000): CPU : Sends agent CPU usage data to the TA Master VMEM : Sends agent memory statistics to the TA Master Setting this parameter takes the following forms: agtresource=CPU;VMEM : Montors both resouces at the default 15000 (15-second) intervals. agtresource=CPU,10000 : Monitors only CPU usage at 10-second intervals. agtresource=CPU,10000;VMEM,20000 : Monitors CPU usage at 10-second intervals and virtual memory usage at 20-second intervals. The minimum interval is 5000 milliseconds, or 5 seconds. cpuload SCP Whether to monitor CPU load on the agent. Valid values include: Y and N (default). debug SCP/INI Debugging level. Valid values include: y : Turns on low-level debugging high : Turns on maximum-level debugging encryptonly SCP/INI Whether to disable encrypted connections between agents and TA Master instances. Valid values include N (default) and Y . filelockcheck SCP/INI Whether the directory monitoring job should skip files that are opened by another process to avoid potential access conflicts. Valid values include: Y (default) and N . folderdep SCP/INI Whether the file monitoring job should monitor directories. Valid values include: Y and N (default). ftptimeout INI Timeout, in milliseconds, for an FTP connection. Default is 120000 (two minutes). Setting the value to 0 results in no timeout for the connection. logdays SCP/INI Number of days to preserve logs. Default: 7. logsize SCP/INI Maximum size, in bytes, of log files. Default: 1024000. msgthreads SCP Number of CPU threads to devote to messages. Default: 5. Tidal recommends using the default value for machines with one or two CPUs. If a machine has more CPUs, you might want to increase the thread count to improve performance. multiftpstd INI How to handle FTP multi-file MGET, MPUT, or MDELETE actions that operate on no files. Values include: Y (default): Allow the job to complete without reporting errors. N : Allow the job to complete abnormally if the actions operated on no files. path SCP Directory for the agent\u2019s ouptut. By default, output is stored in the agent\u2019s root directory. port SCP Port number through which the TA Master communicates with the agent. rjaport SCP Remote job port number. You can specify two ports by using the form: port1 : port2 . sftpparallemode INI Whether secure FTP file transfers (upload and download operations) can run in parallel. Valid values include: Y (default): File transers can run simultaneously (in parallel). N : File transfers are sent sequentially. sftpumask INI Permission mask (4-digit octal) for files created on a Unix-based system with the SFTP PUT actions. Default= 0022 . sslvldcrt SCP/INI Whether to validate SSL certificate validation by Tidal Automation agents. Default= Y . stdout SCP/INI Whether to send output messages to standard output (console) in addition to log files. Valid values include: Y and N (default). substticks INI Whether to substitute single quotes (\u2018) with double quotes (\u201c) in strings. Valid values include: Y and N (default). Setting configuration parameters through the Service Manager To set configuration parameters through the Service Manager: From the Windows Start menu, start the Service Manager. Stop the agent if it is running. In the Service field, select the desired agent and select the button. The agent\u2019s Service Configuration dialog box opens. In the Path field, enter the parameter and value pairs you want to define. Note Any parameters specified in the Path field take precedence over anything specified in the tagent.ini file. Select OK . Restart the agent. Setting configuration parameters in the tagent.ini file The tagent.ini file in the bin directory lets you configure global configuration parameters and configure parameters for individual agents. The file contains a [config] section and an [<Agent-Name>] section for each agent you want to configure. The parameters specified in the [config] section are global and the parameters specified in the [<Agent-Name>] section only apply to that agent and will override specifications in the [config] section for the specific agent. Following is an example of a tagent.ini file: [config] debug=y logdays=3 logsize=1024000 encryptonly=y sslvldcrt=y vldhstcrt=y this is a synonym for sslvldcrt, as host validation also applies to SSH (only works in tagent.ini) [TIDAL_AGENT_1] debug=high logdays=5 logsize=2048000 encryptonly=n vldhstcrt=n To set configuration parameters in the tagent.ini file: Open the tagent.ini file in the agent\u2019s bin directory. Add global and agent-specifc parameters as desired. Save the file. From the Windows Start menu, start the Service Manager. Start, or stop and restart, the agent.","title":"Configuring Windows agents"},{"location":"windows-config/#configuring-windows-agent-instances","text":"You can use the Agent Assistance Manager to configure an agent instance by: Adding an agent instance Modifying an agent instance Deleting an agent instance Configuring Windows Services for an agent Configuring agent parameters","title":"Configuring Windows agent instances"},{"location":"windows-config/#adding-agent-instances","text":"To add an instance: From the Windows Start menu, choose Programs > Tidal Automation > Agent > Instance Manager , right click on the Instance Manager and choose \u201cRun as Administrator\u201d to display the Instance Manager. Click Add . The following dialog box displays. Enter the following: Service Name : Name of the agent service. The name in this field is automatically generated and cannot be edited. Display Name : Name of the agent to add. The name in this text field is automatically generated as a possible candidate for the name of your agent. You can keep or change the name. Port : Port number the agent uses to listen for Master connections. By default, the TIDAL_AGENT_1 port is 5912. When you add additional agents, the port increments by 1 by default. Run on a cluster group : Whether this agent instance is on a node that is configured for a cluster with an existing agent service. If the node is not part of a cluster, this option is unavailable. For more information, see Configuring the Windows Agent for a Cluster . Click Save . Note To connect to the agent you just added, see Defining an Agent Connection .","title":"Adding agent instances"},{"location":"windows-config/#modifying-an-agent-instance","text":"You can modify the port number and the name of the instance that is displayed but the service name cannot be changed. Note The Edit button is unavailable as long as the agent is running. To edit an agent instance: Stop the agent. From the Windows Start menu, choose All Programs > Tidal Automation > TA Service Manager to display the TA Service Manager. From the Services list, choose TIDAL_AGENT_<#> . Click Stop . From the Windows Start menu, choose Programs > Tidal Automation > Agent > Instance Manager , right click on the Instance Manager and choose \u201cRun as Administrator\u201d to display the Instance Manager. Select the instance. Click Edit . The Edit dialog box displays. Make the necessary edits, then click Save . The Information dialog box displays. Click OK . Re-start the agent. From the Windows Start menu, choose All Programs > Tidal Automation > TA Service Manager to display the TA Service Manager. From the Services list, choose TIDAL_AGENT_<#> . Click Start .","title":"Modifying an agent instance"},{"location":"windows-config/#deleting-an-agent-instance","text":"Deleting agent instances does not delete the agent. Even if you delete all of the instances, you must still uninstall the agent program to remove the agent. Note The Delete button is unavailable as long as the agent is running. To delete an instance: Stop the agent. From the Windows Start menu, choose All Programs > Tidal Automation > TA Service Manager to display the TA Service Manager. From the Services list, choose TIDAL_AGENT_<#> . Click Stop . From the Windows Start menu, choose Programs > Tidal Automation > Agent > Instance Manager , right click on the Instance Manager and choose \u201cRun as Administrator\u201d to display the Instance Manager. Select the instance. Click Delete . A confirmation message displays. Click Yes . Attention Tidal recommends that you do not delete the last agent instance called agent_instance_1 . You should instead uninstall the agent program to remove the last agent instance. To delete an agent through the client, see Defining an Agent Connection .","title":"Deleting an agent instance"},{"location":"windows-config/#configuring-windows-services-for-an-agent","text":"After installing or adding agents, you can configure some Windows settings through the Services window, as documented below, or through the TA Services Manager as discussed in Verifying the Installation . To configure an agent for Windows: From the Windows Start menu, choose Settings > Control Panel. Double-click Administrative Tools . Double-click Services . Double-click the agent you just installed. On the General tab of the AGENT Properties dialog box, select Stop to stop the service. On the Log On tab, select This Account. Enter the requested information in the User Name/Domain Name and Password fields, then select OK . Do either of the following: Right-click the agent and choose Start . On the General tab, click Start to restart the agent. Close the Services and Administrative Tools dialog boxes. Go to the client and follow the Defining an agent connection procedure to re-connect the agent.","title":"Configuring Windows Services for an agent"},{"location":"windows-config/#configuring-agent-parameters","text":"You can configure the parameters of a Windows agent by adding the parameter statements to the Service Manager agent startup parameters or specifying them in the tagent.ini file. If the default location was used during the agent installation, the agent files are located in C:\\Program Files\\TIDAL\\Agent\\Bin .","title":"Configuring agent parameters"},{"location":"windows-config/#supported-agent-configuration-parameters","text":"The following table lists the supported configuration parameters. Some parameters can be set only through the Service Manager Service Configuration Parameter field, some can be set only in the tagent.ini file, and others can be set in either manner. The Set in column uses the following notations to indicate where a paramter can be set: INI : Can be set only in the tagent.ini file SCP : Can be set only through the Service Manager SCP/INI : Can be set in either manner Note If you set a parameter in both locations, the value defined through the Service Manager takes precedence. Parameter Set in... Description agent SCP Name of the TA agent agtresource INI Options for monitoring the following agent resources at specified time intervals in milliseconds (default=15000): CPU : Sends agent CPU usage data to the TA Master VMEM : Sends agent memory statistics to the TA Master Setting this parameter takes the following forms: agtresource=CPU;VMEM : Montors both resouces at the default 15000 (15-second) intervals. agtresource=CPU,10000 : Monitors only CPU usage at 10-second intervals. agtresource=CPU,10000;VMEM,20000 : Monitors CPU usage at 10-second intervals and virtual memory usage at 20-second intervals. The minimum interval is 5000 milliseconds, or 5 seconds. cpuload SCP Whether to monitor CPU load on the agent. Valid values include: Y and N (default). debug SCP/INI Debugging level. Valid values include: y : Turns on low-level debugging high : Turns on maximum-level debugging encryptonly SCP/INI Whether to disable encrypted connections between agents and TA Master instances. Valid values include N (default) and Y . filelockcheck SCP/INI Whether the directory monitoring job should skip files that are opened by another process to avoid potential access conflicts. Valid values include: Y (default) and N . folderdep SCP/INI Whether the file monitoring job should monitor directories. Valid values include: Y and N (default). ftptimeout INI Timeout, in milliseconds, for an FTP connection. Default is 120000 (two minutes). Setting the value to 0 results in no timeout for the connection. logdays SCP/INI Number of days to preserve logs. Default: 7. logsize SCP/INI Maximum size, in bytes, of log files. Default: 1024000. msgthreads SCP Number of CPU threads to devote to messages. Default: 5. Tidal recommends using the default value for machines with one or two CPUs. If a machine has more CPUs, you might want to increase the thread count to improve performance. multiftpstd INI How to handle FTP multi-file MGET, MPUT, or MDELETE actions that operate on no files. Values include: Y (default): Allow the job to complete without reporting errors. N : Allow the job to complete abnormally if the actions operated on no files. path SCP Directory for the agent\u2019s ouptut. By default, output is stored in the agent\u2019s root directory. port SCP Port number through which the TA Master communicates with the agent. rjaport SCP Remote job port number. You can specify two ports by using the form: port1 : port2 . sftpparallemode INI Whether secure FTP file transfers (upload and download operations) can run in parallel. Valid values include: Y (default): File transers can run simultaneously (in parallel). N : File transfers are sent sequentially. sftpumask INI Permission mask (4-digit octal) for files created on a Unix-based system with the SFTP PUT actions. Default= 0022 . sslvldcrt SCP/INI Whether to validate SSL certificate validation by Tidal Automation agents. Default= Y . stdout SCP/INI Whether to send output messages to standard output (console) in addition to log files. Valid values include: Y and N (default). substticks INI Whether to substitute single quotes (\u2018) with double quotes (\u201c) in strings. Valid values include: Y and N (default).","title":"Supported agent configuration parameters"},{"location":"windows-config/#setting-configuration-parameters-through-the-service-manager","text":"To set configuration parameters through the Service Manager: From the Windows Start menu, start the Service Manager. Stop the agent if it is running. In the Service field, select the desired agent and select the button. The agent\u2019s Service Configuration dialog box opens. In the Path field, enter the parameter and value pairs you want to define. Note Any parameters specified in the Path field take precedence over anything specified in the tagent.ini file. Select OK . Restart the agent.","title":"Setting configuration parameters through the Service Manager"},{"location":"windows-config/#setting-configuration-parameters-in-the-tagentini-file","text":"The tagent.ini file in the bin directory lets you configure global configuration parameters and configure parameters for individual agents. The file contains a [config] section and an [<Agent-Name>] section for each agent you want to configure. The parameters specified in the [config] section are global and the parameters specified in the [<Agent-Name>] section only apply to that agent and will override specifications in the [config] section for the specific agent. Following is an example of a tagent.ini file: [config] debug=y logdays=3 logsize=1024000 encryptonly=y sslvldcrt=y vldhstcrt=y this is a synonym for sslvldcrt, as host validation also applies to SSH (only works in tagent.ini) [TIDAL_AGENT_1] debug=high logdays=5 logsize=2048000 encryptonly=n vldhstcrt=n To set configuration parameters in the tagent.ini file: Open the tagent.ini file in the agent\u2019s bin directory. Add global and agent-specifc parameters as desired. Save the file. From the Windows Start menu, start the Service Manager. Start, or stop and restart, the agent.","title":"Setting configuration parameters in the tagent.ini file"},{"location":"windows-install/","text":"Installing Windows agents This section explains the requirements and process for installing a Tidal Automation agent on a Windows platform: Rights for installing and running agents Installing an agent on Windows Verifying the installation Rights for installing and running agents The Windows account must have the following rights to install and run agents: Installation rights Local adminstration rights Ability to access COM objects Agent user rights Local system or, if running under a domain\\user account, must have the following local administration rights Logon as a service Logon as part of the operating system Repalce a process token Ability to access COM objects On machines running Windows 2003 or later: Bypass traverse checking Adjust memory quotas for the process Runtime user rights Logon as a batch job Installing an agent on Windows To install an agent: Download and extract the Tidal Automation Agent for Windows software from the Tidal Support Center . Double-click the Agent_windows_TIDAL Agent.msi file. The Security Warning dialog box opens. Click Run . The Status panel opens. The Welcome to the TA Agent Setup panel opens. Note If any other agents are running on the machine, a dialog box notifies you that the agent(s) must be stopped before the installation can continue. Click Next . The Destination Folder panel is displayed. Specify the directory in which to install the TA software using either of the following actions:: \u2014 Select Change and choose the appropriate file. \u2014 Accept the default location at C:\\Program Files (x86)\\TIDAL . Select Next . The Agent Port Number panel opens. Enter the port number that the agent will listen on. The default port is 5912. Select Next . The Ready to Install the Program panel opens. Select Install . Warning Do not click Cancel once the installation process begins copying files in the Setup Status screen. Cancelling the installation at this point corrupts the installation program. You will not be able to install the component without the help of Tidal Support Center. If you decide you do not want to install the component, you must complete the installation and then uninstall. The Setup Completed panel displays. Click Finish . Verifying the installation To verify the agent installed successfully: From the Windows Start menu, choose All Programs > Tidal Automation > TA Service Manager to display the TA Service Manager. From the Services list, choose AGENT_1 . If the TA Service Manager displays the message AGENT_1: Running at the bottom, then the agent is running and the installation was successful. Note If you want to edit the service parameters, click the button to access the Service Configuration dialog box.","title":"Installing Windows agents"},{"location":"windows-install/#installing-windows-agents","text":"This section explains the requirements and process for installing a Tidal Automation agent on a Windows platform: Rights for installing and running agents Installing an agent on Windows Verifying the installation","title":"Installing Windows agents"},{"location":"windows-install/#rights-for-installing-and-running-agents","text":"The Windows account must have the following rights to install and run agents: Installation rights Local adminstration rights Ability to access COM objects Agent user rights Local system or, if running under a domain\\user account, must have the following local administration rights Logon as a service Logon as part of the operating system Repalce a process token Ability to access COM objects On machines running Windows 2003 or later: Bypass traverse checking Adjust memory quotas for the process Runtime user rights Logon as a batch job","title":"Rights for installing and running agents"},{"location":"windows-install/#installing-an-agent-on-windows","text":"To install an agent: Download and extract the Tidal Automation Agent for Windows software from the Tidal Support Center . Double-click the Agent_windows_TIDAL Agent.msi file. The Security Warning dialog box opens. Click Run . The Status panel opens. The Welcome to the TA Agent Setup panel opens. Note If any other agents are running on the machine, a dialog box notifies you that the agent(s) must be stopped before the installation can continue. Click Next . The Destination Folder panel is displayed. Specify the directory in which to install the TA software using either of the following actions:: \u2014 Select Change and choose the appropriate file. \u2014 Accept the default location at C:\\Program Files (x86)\\TIDAL . Select Next . The Agent Port Number panel opens. Enter the port number that the agent will listen on. The default port is 5912. Select Next . The Ready to Install the Program panel opens. Select Install . Warning Do not click Cancel once the installation process begins copying files in the Setup Status screen. Cancelling the installation at this point corrupts the installation program. You will not be able to install the component without the help of Tidal Support Center. If you decide you do not want to install the component, you must complete the installation and then uninstall. The Setup Completed panel displays. Click Finish .","title":"Installing an agent on Windows"},{"location":"windows-install/#verifying-the-installation","text":"To verify the agent installed successfully: From the Windows Start menu, choose All Programs > Tidal Automation > TA Service Manager to display the TA Service Manager. From the Services list, choose AGENT_1 . If the TA Service Manager displays the message AGENT_1: Running at the bottom, then the agent is running and the installation was successful. Note If you want to edit the service parameters, click the button to access the Service Configuration dialog box.","title":"Verifying the installation"},{"location":"windows-manage/","text":"Managing Windows agents The Service Manager allows you to manage installed agents, including: Starting and stopping Windows agents Configuring a cluster to run the Windows agent Uninstalling Windows agents Starting and stopping agents To start or stop an agent: From the Windows Start menu, choose All Programs > Tidal Automation > TA Service Manager to display the Service Manager. From the Services list, choose the name of the agent. Do either of the following: Click Start to start the agent. Click Stop to stop the agent. Checking agent status To check the status of an agent: From the Windows Start menu, choose All Programs > Tidal Automation > Service Manager to display the Service Manager. From the Services list, choose the name of the agent. The status of the agent is displayed at the bottom of the manager. Configuring jobs to run in the foreground Because job processes do not normally require user interaction, they usually run in the background on the agent machine. If needed, you can configure your agent\u2019s system to run job processes in the foreground. Running processes in the foreground both allows user interaction with the process as it runs and enables more processes to run by providing another desktop. You can configure the agent through the Service Manager or by editing the Windows registry. Danger Changing settings in the Windows registry can have serious consequences on your computer system. Consult with your Windows system administrator before making any registry changes. If you want to interact with the process, you can configure the job to run in a command prompt window. Navigate to Service Manager > Service Configuration . Select the Run as LocalSystem and Allow Service to Interact with Desktop check boxes, respectively. Do one of the following: For 64-bit systems, open regedit and navigate to the HKEY_LOCAL_MACHINE\\SOFTWARE\\Tidal Software registry setting. For 32-bit systems, navigate to the HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\TIDAL Software\\Agent registry setting. Right-click Tidal Software and select New > Key . Add a new key with the agent name, such as TIDAL_AGENT_1 . Under TIDAL_AGENT_1 , create a new string called JobLaunchMode with assign one of the following values to configure the appearance of the command prompt window: 0 = Hides the command prompt window and activates another window. 1 = Activates the command prompt window and displays it minimized. 2 = Activates the command prompt window and displays it in its current size and position. 3 = Activates the command prompt window and displays it at maximum size. 4 = Activates the command prompt window and displays it at minimized size. 5 = Displays the command prompt window in its current size and position but the window is not activated. 6 = Displays the command prompt window at its most recent size and position but the window is not activated. 7 = Activates and displays a window at its original size and position. Recommended when displaying the command prompt window for the first time. In the Job on the Run tab, select Use Password to Run Windows Jobs . In the Job on the Options tab, select For UNIX, source users profile . In Runtime Users , set the Windows/FTP/Datamover password for the Runtime Users . Log onto the agent server as the runtime user. If needed, you can repeat this procedure for the other agent instances that are listed in this key. To revert back to the original configuration, delete the registry key that was added. To run the process in the foreground without interacting with the job, you can run it from the default desktop. Configuring jobs to run from the default desktop To run a job from the default desktop: If you want to interact with the process, you can configure the job to run in a command prompt window. Navigate to Service Manager > Service Configuration . Select the Run as LocalSystem and Allow Service to Interact with Desktop check boxes, respectively. Do one of the following: For 64-bit systems, open regedit and navigate to the HKEY_LOCAL_MACHINE\\SOFTWARE\\Tidal Software registry setting. For 32-bit systems, navigate to the HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\TIDAL Software\\Agent registry setting. Right-click Tidal Software and select New > Key . Add a new key with the agent name, such as TIDAL_AGENT_1 . Under TIDAL_AGENT_1 , create a new string called JobUseDefDesktop with assign one of the following values to configure the appearance of the command prompt window: 0 = Hides the command prompt window and activates another window. 1 = Activates the command prompt window and displays it minimized. 2 = Activates the command prompt window and displays it in its current size and position. 3 = Activates the command prompt window and displays it at maximum size. 4 = Activates the command prompt window and displays it at minimized size. 5 = Displays the command prompt window in its current size and position but the window is not activated. 6 = Displays the command prompt window at its most recent size and position but the window is not activated. 7 = Activates and displays a window at its original size and position. Recommended when displaying the command prompt window for the first time. In the Job on the Run tab, select Use Password to Run Windows Jobs . In the Job on the Options tab, select For UNIX, source users profile . In Runtime Users , set the Windows/FTP/Datamover password for the Runtime Users . Log onto the agent server as the runtime user. Configuring a Windows agent to be a remote job adapter proxy Designating the HTTPS port To designate the HTTPS port: From the Windows Start menu, choose All Programs > Tidal Automation > TA Service Manager to display the TA Service Manager. Select the button to display the Service Configuration dialog box. In the Path field, edit the command line of the agent by entering the following parameter: RJAPort=PPPPP Where PPPPP (e.g. 50001 ) is the port number you want to use for the HTTPS connection from the adapter. For example: \"C:\\Program Files\\TIDAL\\Agent\\Bin\\TidalAgent.exe\" AGENT=TIDAL_AGENT_1 PORT=5912 PATH=\"C:\\Program Files\\TIDAL\\Agent\" RJAPort=PPPPP Select OK . Allow Service Manager to restart the agent when you save the change. Notes The proxy support will not be available in this agent if the RJAPort is not specified in the command line. The agent will not be usable by the Adapter until the RJAPort parameter is specified. After adding the RJAPort parameter, you will need to add another dependency to the agent service definition called HTTP SSL. You can do this by going into Service Manager and selecting the ellipses (...) for the specific agent, selecting the 'Dependencies' tab, and then selecting 'HTTP SSL' as a new dependency. The agent will not start automatically at system start-up with-out adding this dependency.(May not be available in Windows 2008 and beyond). Assigning a certificate to the HTTPS port If your machine already has a valid server certificate, you should only have to perform Steps 4 and 5 below. To create a self-signed host certificate and configure it to a port: Open a DOS prompt (Command Shell). From the Windows Start menu, choose Run.. In the Run dialog box, enter cmd. Select OK. Enter the following to create and install a self-signed certificate in the certificate store: makecert -r -pe -n \"CN=localhost\" -eku 1.3.6.1.5.5.7.3.1 -ss my -sr localMachine -sky exchange Tip The makecert command is available in the SDK if you have Visual Studio 2005 installed ( Microsoft Visual Studio 8\\SDK\\v2.0\\Bin ). There are other ways to get a certificate, Google will give you several options. Start Microsoft Management Console (mmc) and copy the certifcate \"local\" located in Personal > Certificates into Trusted Root Certification Authorities > Certificates . At the DOS prompt (Command shell), run either the httpcfg.exe (pre-2008 systems) or netsh (post-2008 systems) command. Note The port used to connect from the Master to the proxy agent via HTTPS (the RJAPORT) must be configured to use SSL. For pre-2008 systems : httpcfg.exe set ssl -i 0.0.0.0:PPPPP -c \"Root\" -h XXXXX where 0.0.0.0:PPPPP is the IP and port. This is for https://localhost:PPPPP , where XXXX is the thumbprint value of the local certificate. To obtain the thrumbprint of a certificate, open the certificate and select the Details tab. Copy the thumbprint and delete all blanks (spaces) between numbers in the thumbprint. Note The name after -c option in the httpcfg set command must match the certificate store, Tidal recommends using Root (see below). Store Names: AddressBook : The X.509 certificate store for other users. AuthRoot : The X.509 certificate store for third-party certificate authorities (CAs). CertificateAuthority : The X.509 certificate store for intermediate certificate authorities (CAs). Disallowed :The X.509 certificate store for revoked certificates. My : The X.509 certificate store for personal certificates. Root : The X.509 certificate store for trusted root certificate authorities (CAs). TrustedPeople : The X.509 certificate store for directly trusted people and resources. TrustedPublisher : The X.509 certificate store for directly trusted publishers. For post-2008 systems : netsh http add sslcert ipport=0.0.0.0:PPPPP certhash=XXXX appid={YYYYYY} where ipport=0.0.0.0:PPPP P (e.g. 0.0.0.0:5000 1) is IP and port used for the URL, as in https://localhost:PPPPP . certhash=XXXX is the Thumbprint value of the local certificate. To obtain the thrumbprint of a certificate, open the certificate and select the Details tab. Copy the thumbprint and delete all blanks (spaces) between numbers in 'Thumbprint'. appid={YYYYYY} is a GUID identifying the owning application. Select OK.","title":"Managing Windows agents"},{"location":"windows-manage/#managing-windows-agents","text":"The Service Manager allows you to manage installed agents, including: Starting and stopping Windows agents Configuring a cluster to run the Windows agent Uninstalling Windows agents","title":"Managing Windows agents"},{"location":"windows-manage/#starting-and-stopping-agents","text":"To start or stop an agent: From the Windows Start menu, choose All Programs > Tidal Automation > TA Service Manager to display the Service Manager. From the Services list, choose the name of the agent. Do either of the following: Click Start to start the agent. Click Stop to stop the agent.","title":"Starting and stopping agents"},{"location":"windows-manage/#checking-agent-status","text":"To check the status of an agent: From the Windows Start menu, choose All Programs > Tidal Automation > Service Manager to display the Service Manager. From the Services list, choose the name of the agent. The status of the agent is displayed at the bottom of the manager.","title":"Checking agent status"},{"location":"windows-manage/#configuring-jobs-to-run-in-the-foreground","text":"Because job processes do not normally require user interaction, they usually run in the background on the agent machine. If needed, you can configure your agent\u2019s system to run job processes in the foreground. Running processes in the foreground both allows user interaction with the process as it runs and enables more processes to run by providing another desktop. You can configure the agent through the Service Manager or by editing the Windows registry. Danger Changing settings in the Windows registry can have serious consequences on your computer system. Consult with your Windows system administrator before making any registry changes. If you want to interact with the process, you can configure the job to run in a command prompt window. Navigate to Service Manager > Service Configuration . Select the Run as LocalSystem and Allow Service to Interact with Desktop check boxes, respectively. Do one of the following: For 64-bit systems, open regedit and navigate to the HKEY_LOCAL_MACHINE\\SOFTWARE\\Tidal Software registry setting. For 32-bit systems, navigate to the HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\TIDAL Software\\Agent registry setting. Right-click Tidal Software and select New > Key . Add a new key with the agent name, such as TIDAL_AGENT_1 . Under TIDAL_AGENT_1 , create a new string called JobLaunchMode with assign one of the following values to configure the appearance of the command prompt window: 0 = Hides the command prompt window and activates another window. 1 = Activates the command prompt window and displays it minimized. 2 = Activates the command prompt window and displays it in its current size and position. 3 = Activates the command prompt window and displays it at maximum size. 4 = Activates the command prompt window and displays it at minimized size. 5 = Displays the command prompt window in its current size and position but the window is not activated. 6 = Displays the command prompt window at its most recent size and position but the window is not activated. 7 = Activates and displays a window at its original size and position. Recommended when displaying the command prompt window for the first time. In the Job on the Run tab, select Use Password to Run Windows Jobs . In the Job on the Options tab, select For UNIX, source users profile . In Runtime Users , set the Windows/FTP/Datamover password for the Runtime Users . Log onto the agent server as the runtime user. If needed, you can repeat this procedure for the other agent instances that are listed in this key. To revert back to the original configuration, delete the registry key that was added. To run the process in the foreground without interacting with the job, you can run it from the default desktop.","title":"Configuring jobs to run in the foreground"},{"location":"windows-manage/#configuring-jobs-to-run-from-the-default-desktop","text":"To run a job from the default desktop: If you want to interact with the process, you can configure the job to run in a command prompt window. Navigate to Service Manager > Service Configuration . Select the Run as LocalSystem and Allow Service to Interact with Desktop check boxes, respectively. Do one of the following: For 64-bit systems, open regedit and navigate to the HKEY_LOCAL_MACHINE\\SOFTWARE\\Tidal Software registry setting. For 32-bit systems, navigate to the HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\TIDAL Software\\Agent registry setting. Right-click Tidal Software and select New > Key . Add a new key with the agent name, such as TIDAL_AGENT_1 . Under TIDAL_AGENT_1 , create a new string called JobUseDefDesktop with assign one of the following values to configure the appearance of the command prompt window: 0 = Hides the command prompt window and activates another window. 1 = Activates the command prompt window and displays it minimized. 2 = Activates the command prompt window and displays it in its current size and position. 3 = Activates the command prompt window and displays it at maximum size. 4 = Activates the command prompt window and displays it at minimized size. 5 = Displays the command prompt window in its current size and position but the window is not activated. 6 = Displays the command prompt window at its most recent size and position but the window is not activated. 7 = Activates and displays a window at its original size and position. Recommended when displaying the command prompt window for the first time. In the Job on the Run tab, select Use Password to Run Windows Jobs . In the Job on the Options tab, select For UNIX, source users profile . In Runtime Users , set the Windows/FTP/Datamover password for the Runtime Users . Log onto the agent server as the runtime user.","title":"Configuring jobs to run from the default desktop"},{"location":"windows-manage/#configuring-a-windows-agent-to-be-a-remote-job-adapter-proxy","text":"","title":"Configuring a Windows agent to be a remote job adapter proxy"},{"location":"windows-manage/#designating-the-https-port","text":"To designate the HTTPS port: From the Windows Start menu, choose All Programs > Tidal Automation > TA Service Manager to display the TA Service Manager. Select the button to display the Service Configuration dialog box. In the Path field, edit the command line of the agent by entering the following parameter: RJAPort=PPPPP Where PPPPP (e.g. 50001 ) is the port number you want to use for the HTTPS connection from the adapter. For example: \"C:\\Program Files\\TIDAL\\Agent\\Bin\\TidalAgent.exe\" AGENT=TIDAL_AGENT_1 PORT=5912 PATH=\"C:\\Program Files\\TIDAL\\Agent\" RJAPort=PPPPP Select OK . Allow Service Manager to restart the agent when you save the change. Notes The proxy support will not be available in this agent if the RJAPort is not specified in the command line. The agent will not be usable by the Adapter until the RJAPort parameter is specified. After adding the RJAPort parameter, you will need to add another dependency to the agent service definition called HTTP SSL. You can do this by going into Service Manager and selecting the ellipses (...) for the specific agent, selecting the 'Dependencies' tab, and then selecting 'HTTP SSL' as a new dependency. The agent will not start automatically at system start-up with-out adding this dependency.(May not be available in Windows 2008 and beyond).","title":"Designating the HTTPS port"},{"location":"windows-manage/#assigning-a-certificate-to-the-https-port","text":"If your machine already has a valid server certificate, you should only have to perform Steps 4 and 5 below. To create a self-signed host certificate and configure it to a port: Open a DOS prompt (Command Shell). From the Windows Start menu, choose Run.. In the Run dialog box, enter cmd. Select OK. Enter the following to create and install a self-signed certificate in the certificate store: makecert -r -pe -n \"CN=localhost\" -eku 1.3.6.1.5.5.7.3.1 -ss my -sr localMachine -sky exchange Tip The makecert command is available in the SDK if you have Visual Studio 2005 installed ( Microsoft Visual Studio 8\\SDK\\v2.0\\Bin ). There are other ways to get a certificate, Google will give you several options. Start Microsoft Management Console (mmc) and copy the certifcate \"local\" located in Personal > Certificates into Trusted Root Certification Authorities > Certificates . At the DOS prompt (Command shell), run either the httpcfg.exe (pre-2008 systems) or netsh (post-2008 systems) command. Note The port used to connect from the Master to the proxy agent via HTTPS (the RJAPORT) must be configured to use SSL. For pre-2008 systems : httpcfg.exe set ssl -i 0.0.0.0:PPPPP -c \"Root\" -h XXXXX where 0.0.0.0:PPPPP is the IP and port. This is for https://localhost:PPPPP , where XXXX is the thumbprint value of the local certificate. To obtain the thrumbprint of a certificate, open the certificate and select the Details tab. Copy the thumbprint and delete all blanks (spaces) between numbers in the thumbprint. Note The name after -c option in the httpcfg set command must match the certificate store, Tidal recommends using Root (see below). Store Names: AddressBook : The X.509 certificate store for other users. AuthRoot : The X.509 certificate store for third-party certificate authorities (CAs). CertificateAuthority : The X.509 certificate store for intermediate certificate authorities (CAs). Disallowed :The X.509 certificate store for revoked certificates. My : The X.509 certificate store for personal certificates. Root : The X.509 certificate store for trusted root certificate authorities (CAs). TrustedPeople : The X.509 certificate store for directly trusted people and resources. TrustedPublisher : The X.509 certificate store for directly trusted publishers. For post-2008 systems : netsh http add sslcert ipport=0.0.0.0:PPPPP certhash=XXXX appid={YYYYYY} where ipport=0.0.0.0:PPPP P (e.g. 0.0.0.0:5000 1) is IP and port used for the URL, as in https://localhost:PPPPP . certhash=XXXX is the Thumbprint value of the local certificate. To obtain the thrumbprint of a certificate, open the certificate and select the Details tab. Copy the thumbprint and delete all blanks (spaces) between numbers in 'Thumbprint'. appid={YYYYYY} is a GUID identifying the owning application. Select OK.","title":"Assigning a certificate to the HTTPS port"},{"location":"windows-uninstall/","text":"Uninstalling Windows agents To uninstall the agent, you must use the Add/Remove Programs utility in the Windows Control Panel. To uninstall an agent: Close the TA client. From the Windows Start menu, choose Settings > Control Panel ; then select Add or Remove Programs . From the list of installed programs, select the TA Agent program. Select Remove to start the uninstallation process. When prompted to confirm that you want to uninstall the program, select OK . Select Finish to end the uninstallation process. Reboot the machine to save the changes to the registry. Note : Occasionally, an empty folder might be left in the Start menu after uninstalling TA components. If this occurs, go to the Programs directory and manually delete the empty folder. The installation log file must also be manually deleted.","title":"Uninstalling Windows agents"},{"location":"windows-uninstall/#uninstalling-windows-agents","text":"To uninstall the agent, you must use the Add/Remove Programs utility in the Windows Control Panel. To uninstall an agent: Close the TA client. From the Windows Start menu, choose Settings > Control Panel ; then select Add or Remove Programs . From the list of installed programs, select the TA Agent program. Select Remove to start the uninstallation process. When prompted to confirm that you want to uninstall the program, select OK . Select Finish to end the uninstallation process. Reboot the machine to save the changes to the registry. Note : Occasionally, an empty folder might be left in the Start menu after uninstalling TA components. If this occurs, go to the Programs directory and manually delete the empty folder. The installation log file must also be manually deleted.","title":"Uninstalling Windows agents"}]}